// <auto-generated />
using AdminCore.Migrations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace AdminCore.Migrations.Migrations
{
    [DbContext(typeof(MigrationsContext))]
    partial class MigrationsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ActividadesEconomicas", b =>
                {
                    b.Property<int>("IdActividadEconomica")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_ACTIVIDAD_ECONOMICA");

                    b.Property<string>("CodigoActividad")
                        .IsRequired()
                        .HasColumnName("CODIGO_ACTIVIDAD")
                        .HasMaxLength(20);

                    b.Property<string>("CuentaIca")
                        .HasColumnName("CUENTA_ICA")
                        .HasMaxLength(30);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(80);

                    b.Property<decimal?>("Tarifa")
                        .HasColumnName("TARIFA");

                    b.HasKey("IdActividadEconomica");

                    b.ToTable("ACTIVIDADES_ECONOMICAS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.AjustesInventario", b =>
                {
                    b.Property<int>("IdAjusteInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_AJUSTE_INVENTARIO");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnName("CONCEPTO")
                        .HasMaxLength(900);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime>("Fecha")
                        .HasColumnName("FECHA")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.HasKey("IdAjusteInventario");

                    b.ToTable("AJUSTES_INVENTARIO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Articulos", b =>
                {
                    b.Property<int>("IdArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<string>("CodUnicoFabricante")
                        .HasColumnName("COD_UNICO_FABRICANTE")
                        .HasMaxLength(64);

                    b.Property<string>("CodUnicoListaencasa")
                        .HasColumnName("COD_UNICO_LISTAENCASA")
                        .HasMaxLength(64);

                    b.Property<bool>("EnPromocion")
                        .HasColumnName("EN_PROMOCION");

                    b.Property<bool>("EsCuaderno")
                        .HasColumnName("ES_CUADERNO");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaDisponible")
                        .HasColumnName("FECHA_DISPONIBLE")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Iva")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IVA")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IvaExcluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IVA_EXCLUIDO")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("LargeImgUrl")
                        .HasColumnName("LARGE_IMG_URL")
                        .HasMaxLength(600);

                    b.Property<string>("MediumImgUrl")
                        .HasColumnName("MEDIUM_IMG_URL")
                        .HasMaxLength(600);

                    b.Property<string>("Nombre")
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(80);

                    b.Property<string>("NombreBuscador")
                        .HasColumnName("NOMBRE_BUSCADOR")
                        .HasMaxLength(200);

                    b.Property<bool?>("TieneImagen")
                        .HasColumnName("TIENE_IMAGEN");

                    b.Property<DateTime?>("UltimaOrden")
                        .HasColumnName("ULTIMA_ORDEN")
                        .HasColumnType("datetime");

                    b.Property<string>("UrlThumbnail")
                        .HasColumnName("URL_THUMBNAIL")
                        .HasMaxLength(600);

                    b.HasKey("IdArticulo", "IdProducto");

                    b.HasIndex("IdProducto")
                        .HasName("IX_ID_PRODUCTO");

                    b.ToTable("ARTICULOS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosAtributosValores", b =>
                {
                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<int>("IdAtributo")
                        .HasColumnName("ID_ATRIBUTO");

                    b.Property<int>("IdValor")
                        .HasColumnName("ID_VALOR");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.HasKey("IdArticulo", "IdProducto", "IdAtributo", "IdValor");

                    b.HasIndex("IdAtributo")
                        .HasName("IX_ID_ATRIBUTO");

                    b.HasIndex("IdValor")
                        .HasName("IX_ID_VALOR");

                    b.HasIndex("IdArticulo", "IdProducto")
                        .HasName("IX_ID_ARTICULO_ID_PRODUCTO");

                    b.ToTable("ARTICULOS_ATRIBUTOS_VALORES");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosCarritoCompra", b =>
                {
                    b.Property<int>("IdArticulosCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_ARTICULOS_CARRITO");

                    b.Property<int>("Cantidad")
                        .HasColumnName("CANTIDAD");

                    b.Property<string>("CodigoLec")
                        .HasColumnName("CODIGO_LEC")
                        .HasMaxLength(64);

                    b.Property<bool>("Disponible")
                        .HasColumnName("DISPONIBLE");

                    b.Property<bool>("Donacion")
                        .HasColumnName("DONACION");

                    b.Property<bool>("EsCuaderno")
                        .HasColumnName("ES_CUADERNO");

                    b.Property<int>("FechaLista")
                        .HasColumnName("FECHA_LISTA");

                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int?>("IdArticuloBackup")
                        .HasColumnName("ID_ARTICULO_BACKUP");

                    b.Property<int>("IdCarrito")
                        .HasColumnName("ID_CARRITO");

                    b.Property<string>("IdLista")
                        .IsRequired()
                        .HasColumnName("ID_LISTA")
                        .HasMaxLength(20);

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnName("ID_USUARIO")
                        .HasMaxLength(128);

                    b.Property<decimal?>("Iva")
                        .HasColumnName("IVA");

                    b.Property<string>("LargeImage")
                        .HasColumnName("LARGE_IMAGE")
                        .HasMaxLength(600);

                    b.Property<string>("Marca")
                        .HasColumnName("MARCA");

                    b.Property<string>("Nombre")
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(80);

                    b.Property<int?>("Peso")
                        .HasColumnName("PESO");

                    b.Property<decimal>("Precio")
                        .HasColumnName("PRECIO");

                    b.Property<bool>("TieneImagen")
                        .HasColumnName("TIENE_IMAGEN");

                    b.Property<bool>("TieneMarcado")
                        .HasColumnName("TIENE_MARCADO");

                    b.Property<string>("UrlThumb")
                        .HasColumnName("URL_THUMB")
                        .HasMaxLength(600);

                    b.Property<int?>("ValorMarcado")
                        .HasColumnName("VALOR_MARCADO");

                    b.HasKey("IdArticulosCarrito");

                    b.HasIndex("IdCarrito")
                        .HasName("IX_ID_CARRITO");

                    b.ToTable("ARTICULOS_CARRITO_COMPRA");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosCarritoCompraPrepedido", b =>
                {
                    b.Property<int>("IdArticulosCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_ARTICULOS_CARRITO");

                    b.Property<int>("Cantidad")
                        .HasColumnName("CANTIDAD");

                    b.Property<bool>("Donacion")
                        .HasColumnName("DONACION");

                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int?>("IdArticuloBackup")
                        .HasColumnName("ID_ARTICULO_BACKUP");

                    b.Property<int>("IdCarrito")
                        .HasColumnName("ID_CARRITO");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<decimal?>("Iva")
                        .HasColumnName("IVA");

                    b.Property<string>("Nombre")
                        .HasColumnName("NOMBRE");

                    b.Property<int?>("Peso")
                        .HasColumnName("PESO");

                    b.Property<decimal>("Precio")
                        .HasColumnName("PRECIO");

                    b.Property<bool>("TieneMarcado")
                        .HasColumnName("TIENE_MARCADO");

                    b.Property<int?>("ValorMarcado")
                        .HasColumnName("VALOR_MARCADO");

                    b.HasKey("IdArticulosCarrito");

                    b.HasIndex("IdCarrito")
                        .HasName("IX_ID_CARRITO");

                    b.ToTable("ARTICULOS_CARRITO_COMPRA_PREPEDIDO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosDetallesListaPedido", b =>
                {
                    b.Property<int>("IdDetallePedido")
                        .HasColumnName("ID_DETALLE_PEDIDO");

                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<int>("Cantidad")
                        .HasColumnName("CANTIDAD");

                    b.Property<DateTime>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO")
                        .HasColumnType("datetime");

                    b.Property<bool>("EstadoRegistro1")
                        .HasColumnName("EstadoRegistro");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<bool>("TieneMarcado")
                        .HasColumnName("TIENE_MARCADO");

                    b.HasKey("IdDetallePedido", "IdArticulo", "IdProducto");

                    b.HasIndex("IdDetallePedido")
                        .HasName("IX_ID_DETALLE_PEDIDO");

                    b.HasIndex("IdArticulo", "IdProducto")
                        .HasName("IX_ID_ARTICULO_ID_PRODUCTO");

                    b.ToTable("ARTICULOS_DETALLES_LISTA_PEDIDO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosEntradosEstantes", b =>
                {
                    b.Property<int>("IdDetalleEntradaInventario")
                        .HasColumnName("ID_DETALLE_ENTRADA_INVENTARIO");

                    b.Property<int>("IdEstante")
                        .HasColumnName("ID_ESTANTE");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.HasKey("IdDetalleEntradaInventario", "IdEstante");

                    b.HasIndex("IdDetalleEntradaInventario")
                        .HasName("IX_ID_DETALLE_ENTRADA_INVENTARIO");

                    b.HasIndex("IdEstante")
                        .HasName("IX_ID_ESTANTE");

                    b.ToTable("ARTICULOS_ENTRADOS_ESTANTES");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosPedidosFacturasVenta", b =>
                {
                    b.Property<int>("IdCambio")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_CAMBIO");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdArticuloCambio")
                        .HasColumnName("ID_ARTICULO_CAMBIO");

                    b.Property<int>("IdFactura")
                        .HasColumnName("ID_FACTURA");

                    b.Property<int>("IdPedido")
                        .HasColumnName("ID_PEDIDO");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<int>("IdProductoCambio")
                        .HasColumnName("ID_PRODUCTO_CAMBIO");

                    b.HasKey("IdCambio");

                    b.HasIndex("IdArticulo", "IdPedido", "IdProducto")
                        .HasName("IX_ID_ARTICULO_ID_PEDIDO_ID_PRODUCTO");

                    b.HasIndex("IdArticuloCambio", "IdFactura", "IdProductoCambio")
                        .HasName("IX_ID_ARTICULO_CAMBIO_ID_FACTURA_ID_PRODUCTO_CAMBIO");

                    b.ToTable("ARTICULOS_PEDIDOS_FACTURAS_VENTA");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosPorFacturaCompra", b =>
                {
                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdFacturaCompra")
                        .HasColumnName("ID_FACTURA_COMPRA");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<int>("Cantidad")
                        .HasColumnName("CANTIDAD");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<decimal>("PorcentajeIva")
                        .HasColumnName("PORCENTAJE_IVA");

                    b.Property<decimal>("PrecioCompraSinIva")
                        .HasColumnName("PRECIO_COMPRA_SIN_IVA")
                        .HasColumnType("decimal(14, 6)");

                    b.HasKey("IdArticulo", "IdFacturaCompra", "IdProducto");

                    b.HasIndex("IdFacturaCompra")
                        .HasName("IX_ID_FACTURA_COMPRA");

                    b.HasIndex("IdArticulo", "IdProducto")
                        .HasName("IX_ID_ARTICULO_ID_PRODUCTO");

                    b.ToTable("ARTICULOS_POR_FACTURA_COMPRA");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosPorFacturaVenta", b =>
                {
                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdFacturaVenta")
                        .HasColumnName("ID_FACTURA_VENTA");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<int>("Cantidad")
                        .HasColumnName("CANTIDAD");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("PrecioConIva")
                        .HasColumnName("PRECIO_CON_IVA");

                    b.HasKey("IdArticulo", "IdFacturaVenta", "IdProducto");

                    b.HasIndex("IdFacturaVenta")
                        .HasName("IX_ID_FACTURA_VENTA");

                    b.HasIndex("IdArticulo", "IdProducto")
                        .HasName("IX_ID_ARTICULO_ID_PRODUCTO");

                    b.ToTable("ARTICULOS_POR_FACTURA_VENTA");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosPorInstitucion", b =>
                {
                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdIndividuo")
                        .HasColumnName("ID_INDIVIDUO");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<int>("IdPedido")
                        .HasColumnName("ID_PEDIDO");

                    b.Property<int>("Cantidad")
                        .HasColumnName("CANTIDAD");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.HasKey("IdArticulo", "IdIndividuo", "IdProducto", "IdPedido");

                    b.HasIndex("IdIndividuo")
                        .HasName("IX_ID_INDIVIDUO");

                    b.HasIndex("IdPedido")
                        .HasName("IX_ID_PEDIDO");

                    b.HasIndex("IdArticulo", "IdProducto")
                        .HasName("IX_ID_ARTICULO_ID_PRODUCTO");

                    b.ToTable("ARTICULOS_POR_INSTITUCION");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosPorInstitucionPrePedido", b =>
                {
                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdIndividuo")
                        .HasColumnName("ID_INDIVIDUO");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<int>("IdPrePedido")
                        .HasColumnName("ID_PRE_PEDIDO");

                    b.Property<int>("Cantidad")
                        .HasColumnName("CANTIDAD");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.HasKey("IdArticulo", "IdIndividuo", "IdProducto", "IdPrePedido");

                    b.HasIndex("IdPrePedido")
                        .HasName("IX_ID_PRE_PEDIDO");

                    b.ToTable("ARTICULOS_POR_INSTITUCION_PRE_PEDIDO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosPorLista", b =>
                {
                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdLista")
                        .HasColumnName("ID_LISTA");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<int>("Cantidad")
                        .HasColumnName("CANTIDAD");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Obligatorio")
                        .HasColumnName("OBLIGATORIO");

                    b.Property<int?>("Secuencia")
                        .HasColumnName("SECUENCIA");

                    b.Property<bool>("TieneMarcado")
                        .HasColumnName("TIENE_MARCADO");

                    b.HasKey("IdArticulo", "IdLista", "IdProducto");

                    b.HasIndex("IdLista")
                        .HasName("IX_ID_LISTA");

                    b.HasIndex("IdArticulo", "IdProducto")
                        .HasName("IX_ID_ARTICULO_ID_PRODUCTO");

                    b.ToTable("ARTICULOS_POR_LISTA");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosPorOrden", b =>
                {
                    b.Property<int>("IdDetalleOrdenCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_DETALLE_ORDEN_COMPRA");

                    b.Property<int>("Cantidad")
                        .HasColumnName("CANTIDAD");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdOrden")
                        .HasColumnName("ID_ORDEN");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<string>("LugarUltimaCompra")
                        .HasColumnName("LUGAR_ULTIMA_COMPRA")
                        .HasMaxLength(30);

                    b.Property<decimal?>("PrecioUltimaCompra")
                        .HasColumnName("PRECIO_ULTIMA_COMPRA");

                    b.HasKey("IdDetalleOrdenCompra");

                    b.HasIndex("IdOrden")
                        .HasName("IX_ID_ORDEN");

                    b.HasIndex("IdArticulo", "IdProducto")
                        .HasName("IX_ID_ARTICULO_ID_PRODUCTO");

                    b.ToTable("ARTICULOS_POR_ORDEN");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosPorPedido", b =>
                {
                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdPedido")
                        .HasColumnName("ID_PEDIDO");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<int>("Cantidad")
                        .HasColumnName("CANTIDAD");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("PrecioConIva")
                        .HasColumnName("PRECIO_CON_IVA");

                    b.HasKey("IdArticulo", "IdPedido", "IdProducto");

                    b.HasIndex("IdPedido")
                        .HasName("IX_ID_PEDIDO");

                    b.HasIndex("IdArticulo", "IdProducto")
                        .HasName("IX_ID_ARTICULO_ID_PRODUCTO");

                    b.ToTable("ARTICULOS_POR_PEDIDO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosPrePedido", b =>
                {
                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdPrePedido")
                        .HasColumnName("ID_PRE_PEDIDO");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<int>("Cantidad")
                        .HasColumnName("CANTIDAD");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("PrecioConIva")
                        .HasColumnName("PRECIO_CON_IVA");

                    b.HasKey("IdArticulo", "IdPrePedido", "IdProducto");

                    b.HasIndex("IdPrePedido")
                        .HasName("IX_ID_PRE_PEDIDO");

                    b.ToTable("ARTICULOS_PRE_PEDIDO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosUnidadVenta", b =>
                {
                    b.Property<int>("IdUnidadVenta")
                        .HasColumnName("ID_UNIDAD_VENTA");

                    b.Property<int>("Cantidad")
                        .HasColumnName("CANTIDAD");

                    b.Property<int>("IdArticulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdArticuloBase")
                        .HasColumnName("ID_ARTICULO_BASE");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<int>("IdProductoBase")
                        .HasColumnName("ID_PRODUCTO_BASE");

                    b.HasKey("IdUnidadVenta");

                    b.HasIndex("IdArticulo", "IdProducto")
                        .HasName("IX_ID_ARTICULO_ID_PRODUCTO");

                    b.HasIndex("IdArticuloBase", "IdProductoBase")
                        .HasName("IX_ID_ARTICULO_BASE_ID_PRODUCTO_BASE");

                    b.ToTable("ARTICULOS_UNIDAD_VENTA");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.AspNetRoles", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.AspNetUserClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.AspNetUserLogins", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(128);

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.HasKey("UserId", "LoginProvider", "ProviderKey");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.AspNetUserRoles", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(128);

                    b.Property<string>("RoleId")
                        .HasMaxLength(128);

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.AspNetUsers", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(128);

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConfirmationToken")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email");

                    b.Property<bool?>("EmailConfirmed");

                    b.Property<bool?>("IsConfirmed");

                    b.Property<DateTime?>("LastPasswordFailureDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("LockoutEnabled");

                    b.Property<DateTime?>("LockoutEndDateUtc");

                    b.Property<DateTime?>("PasswordChangedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("PasswordFailuresSinceLastSuccess")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PasswordVerificationToken")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("PasswordVerificationTokenExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool?>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool?>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.AtribsInstituciones", b =>
                {
                    b.Property<int>("IdIndividuo")
                        .HasColumnName("ID_INDIVIDUO");

                    b.Property<int?>("AnioPension")
                        .HasColumnName("ANIO_PENSION");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaMatricula")
                        .HasColumnName("FECHA_MATRICULA")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FinClases")
                        .HasColumnName("FIN_CLASES")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InicioClases")
                        .HasColumnName("INICIO_CLASES")
                        .HasColumnType("datetime");

                    b.Property<string>("Jornada")
                        .HasColumnName("JORNADA")
                        .HasMaxLength(30);

                    b.Property<string>("NombreRector")
                        .HasColumnName("NOMBRE_RECTOR")
                        .HasMaxLength(100);

                    b.Property<string>("UrlSitioWeb")
                        .HasColumnName("URL_SITIO_WEB")
                        .HasMaxLength(300);

                    b.Property<decimal?>("ValorMatricula")
                        .HasColumnName("VALOR_MATRICULA");

                    b.Property<decimal?>("ValorPension1")
                        .HasColumnName("VALOR_PENSION_1");

                    b.Property<bool?>("VendeTextos")
                        .HasColumnName("VENDE_TEXTOS");

                    b.Property<bool?>("VendeUtiles")
                        .HasColumnName("VENDE_UTILES");

                    b.HasKey("IdIndividuo");

                    b.HasIndex("IdIndividuo")
                        .IsUnique()
                        .HasName("IX_ID_INDIVIDUO");

                    b.ToTable("ATRIBS_INSTITUCIONES");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.AtributosArticulos", b =>
                {
                    b.Property<int>("IdAtributo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_ATRIBUTO");

                    b.Property<string>("Descripcion")
                        .HasColumnName("DESCRIPCION")
                        .HasMaxLength(300);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdTipo")
                        .HasColumnName("ID_TIPO");

                    b.Property<int?>("IdUnidVenta")
                        .HasColumnName("ID_UNID_VENTA");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(45);

                    b.Property<int>("Secuencia")
                        .HasColumnName("SECUENCIA");

                    b.HasKey("IdAtributo");

                    b.HasIndex("IdTipo")
                        .HasName("IX_ID_TIPO");

                    b.HasIndex("IdUnidVenta")
                        .HasName("IX_ID_UNID_VENTA");

                    b.ToTable("ATRIBUTOS_ARTICULOS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.BeneficiariosValidos", b =>
                {
                    b.Property<int>("IdBeneficiario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_BENEFICIARIO");

                    b.Property<string>("CorreoIdentificacion")
                        .HasColumnName("CORREO_IDENTIFICACION")
                        .HasMaxLength(60);

                    b.Property<bool>("EstaActivo")
                        .HasColumnName("ESTA_ACTIVO");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdBeneficio")
                        .HasColumnName("ID_BENEFICIO");

                    b.Property<string>("NumeroIdentificacion")
                        .HasColumnName("NUMERO_IDENTIFICACION")
                        .HasMaxLength(40);

                    b.HasKey("IdBeneficiario");

                    b.HasIndex("IdBeneficio")
                        .HasName("IX_ID_BENEFICIO");

                    b.ToTable("BENEFICIARIOS_VALIDOS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.BeneficiosAliados", b =>
                {
                    b.Property<int>("IdBeneficio")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_BENEFICIO");

                    b.Property<bool>("EsCostoEnvioGratis")
                        .HasColumnName("ES_COSTO_ENVIO_GRATIS");

                    b.Property<bool>("EsCostoMarcadoGratis")
                        .HasColumnName("ES_COSTO_MARCADO_GRATIS");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdCodigoDescuento")
                        .HasColumnName("ID_CODIGO_DESCUENTO");

                    b.Property<int>("IdIndividuo")
                        .HasColumnName("ID_INDIVIDUO");

                    b.HasKey("IdBeneficio");

                    b.HasIndex("IdCodigoDescuento")
                        .HasName("IX_ID_CODIGO_DESCUENTO");

                    b.HasIndex("IdIndividuo")
                        .HasName("IX_ID_INDIVIDUO");

                    b.ToTable("BENEFICIOS_ALIADOS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Bodegas", b =>
                {
                    b.Property<int>("IdBodega")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_BODEGA");

                    b.Property<string>("Especificacion")
                        .HasColumnName("ESPECIFICACION")
                        .HasMaxLength(100);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdUbicacion")
                        .HasColumnName("ID_UBICACION");

                    b.Property<string>("NombreBodega")
                        .IsRequired()
                        .HasColumnName("NOMBRE_BODEGA")
                        .HasMaxLength(45);

                    b.HasKey("IdBodega");

                    b.HasIndex("IdUbicacion")
                        .HasName("IX_ID_UBICACION");

                    b.ToTable("BODEGAS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Campanas", b =>
                {
                    b.Property<int>("IdCampana")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_CAMPANA");

                    b.Property<string>("Descripcion")
                        .HasColumnName("DESCRIPCION")
                        .HasMaxLength(300);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaFinCampama")
                        .HasColumnName("FECHA_FIN_CAMPAMA")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaInicioCampana")
                        .HasColumnName("FECHA_INICIO_CAMPANA")
                        .HasColumnType("datetime");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnName("TIPO")
                        .HasMaxLength(20);

                    b.HasKey("IdCampana");

                    b.ToTable("CAMPANAS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.CarritoCompra", b =>
                {
                    b.Property<int>("IdCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_CARRITO");

                    b.Property<string>("Alerta")
                        .HasColumnName("ALERTA");

                    b.Property<bool>("Autenticado")
                        .HasColumnName("AUTENTICADO");

                    b.Property<string>("CodigoDescuento")
                        .HasColumnName("CODIGO_DESCUENTO");

                    b.Property<string>("Curso")
                        .HasColumnName("CURSO");

                    b.Property<string>("DireccionaColegio")
                        .HasColumnName("DIRECCIONA_COLEGIO");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnName("FECHA_EXPIRACION")
                        .HasColumnType("datetime");

                    b.Property<int?>("FechaLista")
                        .HasColumnName("FECHA_LISTA");

                    b.Property<int?>("IdCiudad")
                        .HasColumnName("ID_CIUDAD");

                    b.Property<int?>("IdGenero")
                        .HasColumnName("ID_GENERO");

                    b.Property<int?>("IdIndividuo")
                        .HasColumnName("ID_INDIVIDUO");

                    b.Property<string>("IdLista")
                        .IsRequired()
                        .HasColumnName("ID_LISTA")
                        .HasMaxLength(20);

                    b.Property<int?>("IdListaReal")
                        .HasColumnName("ID_LISTA_REAL");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnName("ID_USUARIO")
                        .HasMaxLength(128);

                    b.Property<bool>("IsList");

                    b.Property<decimal>("MinimoDescuento")
                        .HasColumnName("MINIMO_DESCUENTO");

                    b.Property<string>("NombreColegio")
                        .HasColumnName("NOMBRE_COLEGIO");

                    b.Property<string>("NombreCortoColegio")
                        .HasColumnName("NOMBRE_CORTO_COLEGIO")
                        .HasMaxLength(45);

                    b.Property<string>("NombreMarcado")
                        .HasColumnName("NOMBRE_MARCADO")
                        .HasMaxLength(35);

                    b.Property<string>("NombreOficialColegio")
                        .HasColumnName("NOMBRE_OFICIAL_COLEGIO")
                        .HasMaxLength(80);

                    b.Property<string>("RedisSesion")
                        .HasColumnName("REDIS_SESION")
                        .HasMaxLength(50);

                    b.Property<bool?>("TieneMarcado")
                        .HasColumnName("TIENE_MARCADO");

                    b.Property<string>("TipoDescuento")
                        .HasColumnName("TIPO_DESCUENTO");

                    b.Property<string>("UrlLogo")
                        .HasColumnName("URL_LOGO");

                    b.Property<string>("UrlLogoMin")
                        .HasColumnName("URL_LOGO_MIN");

                    b.Property<decimal>("ValorDescuento")
                        .HasColumnName("VALOR_DESCUENTO");

                    b.HasKey("IdCarrito");

                    b.ToTable("CARRITO_COMPRA");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.CarritoCompraPrepedido", b =>
                {
                    b.Property<int>("IdCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_CARRITO");

                    b.Property<string>("Alerta")
                        .HasColumnName("ALERTA");

                    b.Property<string>("CodigoDescuento")
                        .HasColumnName("CODIGO_DESCUENTO");

                    b.Property<decimal>("CostoEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COSTO_ENVIO")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("CostoMarcado")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("COSTO_MARCADO")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Curso")
                        .HasColumnName("CURSO");

                    b.Property<bool>("EsLista")
                        .HasColumnName("ES_LISTA");

                    b.Property<int>("FechaLista")
                        .HasColumnName("FECHA_LISTA");

                    b.Property<int?>("IdColegio")
                        .HasColumnName("ID_COLEGIO");

                    b.Property<int?>("IdGenero")
                        .HasColumnName("ID_GENERO");

                    b.Property<int?>("IdInformacionUsuario")
                        .HasColumnName("ID_INFORMACION_USUARIO");

                    b.Property<int?>("IdListaReal")
                        .HasColumnName("ID_LISTA_REAL");

                    b.Property<string>("IdSesion")
                        .HasColumnName("ID_SESION");

                    b.Property<decimal>("MinimoDescuento")
                        .HasColumnName("MINIMO_DESCUENTO");

                    b.Property<string>("NombreCortoColegio")
                        .HasColumnName("NOMBRE_CORTO_COLEGIO")
                        .HasMaxLength(45);

                    b.Property<string>("NombreMarcado")
                        .HasColumnName("NOMBRE_MARCADO")
                        .HasMaxLength(35);

                    b.Property<bool?>("TieneMarcado")
                        .HasColumnName("TIENE_MARCADO");

                    b.Property<string>("TipoDescuento")
                        .HasColumnName("TIPO_DESCUENTO");

                    b.Property<decimal>("ValorDescuento")
                        .HasColumnName("VALOR_DESCUENTO");

                    b.HasKey("IdCarrito");

                    b.HasIndex("IdInformacionUsuario")
                        .HasName("IX_ID_INFORMACION_USUARIO");

                    b.ToTable("CARRITO_COMPRA_PREPEDIDO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.CategoriaCategorias", b =>
                {
                    b.Property<int>("IdCategoriaHijo")
                        .HasColumnName("ID_CATEGORIA_HIJO");

                    b.Property<int>("IdCategoriaPadre")
                        .HasColumnName("ID_CATEGORIA_PADRE");

                    b.HasKey("IdCategoriaHijo", "IdCategoriaPadre");

                    b.HasIndex("IdCategoriaHijo")
                        .HasName("IX_ID_CATEGORIA_HIJO");

                    b.HasIndex("IdCategoriaPadre")
                        .HasName("IX_ID_CATEGORIA_PADRE");

                    b.ToTable("CATEGORIA_CATEGORIAS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.CategoriaProd", b =>
                {
                    b.Property<int>("CategoriasIdCategoria")
                        .HasColumnName("CATEGORIAS_ID_CATEGORIA");

                    b.Property<int>("ProductosIdProducto")
                        .HasColumnName("PRODUCTOS_ID_PRODUCTO");

                    b.HasKey("CategoriasIdCategoria", "ProductosIdProducto");

                    b.HasIndex("CategoriasIdCategoria")
                        .HasName("IX_CATEGORIAS_ID_CATEGORIA");

                    b.HasIndex("ProductosIdProducto")
                        .HasName("IX_PRODUCTOS_ID_PRODUCTO");

                    b.ToTable("CATEGORIA_PROD");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Categorias", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_CATEGORIA");

                    b.Property<string>("DescripcionCorta")
                        .HasColumnName("DESCRIPCION_CORTA")
                        .HasMaxLength(300);

                    b.Property<string>("DescripcionLarga")
                        .HasColumnName("DESCRIPCION_LARGA");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(45);

                    b.Property<string>("NombreCorto")
                        .HasColumnName("NOMBRE_CORTO")
                        .HasMaxLength(30);

                    b.HasKey("IdCategoria");

                    b.ToTable("CATEGORIAS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.CategoriasCategoriasContable", b =>
                {
                    b.Property<int>("IdCategoria")
                        .HasColumnName("ID_CATEGORIA");

                    b.Property<int>("IdCategoriaContable")
                        .HasColumnName("ID_CATEGORIA_CONTABLE");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.HasKey("IdCategoria", "IdCategoriaContable");

                    b.HasIndex("IdCategoria")
                        .HasName("IX_ID_CATEGORIA");

                    b.HasIndex("IdCategoriaContable")
                        .HasName("IX_ID_CATEGORIA_CONTABLE");

                    b.ToTable("CATEGORIAS_CATEGORIAS_CONTABLE");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.CategoriasContabilidad", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_CATEGORIA");

                    b.Property<int>("CuentaContable")
                        .HasColumnName("CUENTA_CONTABLE");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(100);

                    b.Property<string>("TipoIva")
                        .HasColumnName("TIPO_IVA")
                        .HasMaxLength(15);

                    b.HasKey("IdCategoria");

                    b.ToTable("CATEGORIAS_CONTABILIDAD");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Ciudades", b =>
                {
                    b.Property<int>("IdCiudad")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_CIUDAD");

                    b.Property<string>("CodigoCiudad")
                        .HasColumnName("CODIGO_CIUDAD")
                        .HasColumnType("nchar(5)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdRegion")
                        .HasColumnName("ID_REGION");

                    b.Property<string>("NombreCiudad")
                        .HasColumnName("NOMBRE_CIUDAD")
                        .HasMaxLength(50);

                    b.Property<bool>("TieneCostoEnvio")
                        .HasColumnName("TIENE_COSTO_ENVIO");

                    b.Property<decimal?>("ValorDescuentoEnvio")
                        .HasColumnName("VALOR_DESCUENTO_ENVIO");

                    b.Property<decimal>("ValorEnvio")
                        .HasColumnName("VALOR_ENVIO");

                    b.HasKey("IdCiudad");

                    b.HasIndex("IdRegion")
                        .HasName("IX_ID_REGION");

                    b.ToTable("CIUDADES");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ClienteCarritoCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CIUDAD")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(30);

                    b.Property<string>("CodigoPedido")
                        .HasColumnName("CODIGO_PEDIDO")
                        .HasMaxLength(20);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnName("DIRECCION")
                        .HasMaxLength(120);

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EMAIL")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(120);

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('1900-01-01T00:00:00.000')");

                    b.Property<int>("IdCiudad")
                        .HasColumnName("ID_CIUDAD");

                    b.Property<int>("IdIndividuo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_INDIVIDUO")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("IdUbicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_UBICACION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(120);

                    b.Property<string>("NumeroIdentificacion")
                        .IsRequired()
                        .HasColumnName("NUMERO_IDENTIFICACION")
                        .HasMaxLength(15);

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnName("TELEFONO")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("CLIENTE_CARRITO_COMPRA");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.CostoEnvio", b =>
                {
                    b.Property<int>("IdCostoEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_COSTO_ENVIO");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCiudad")
                        .HasColumnName("ID_CIUDAD");

                    b.Property<int>("Peso")
                        .HasColumnName("PESO");

                    b.Property<decimal>("Precio")
                        .HasColumnName("PRECIO");

                    b.HasKey("IdCostoEnvio");

                    b.HasIndex("IdCiudad")
                        .HasName("IX_ID_CIUDAD");

                    b.ToTable("COSTO_ENVIO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.CotizacionesListaEscolar", b =>
                {
                    b.Property<int>("IdCotizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_COTIZACION");

                    b.Property<string>("Curso")
                        .IsRequired()
                        .HasColumnName("CURSO")
                        .HasMaxLength(20);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMAIL")
                        .HasMaxLength(64);

                    b.Property<bool>("Estado")
                        .HasColumnName("ESTADO");

                    b.Property<DateTime?>("FechaRespuesta")
                        .HasColumnName("FECHA_RESPUESTA")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnName("FECHA_SOLICITUD")
                        .HasColumnType("datetime");

                    b.Property<int?>("GeneroEstudiante")
                        .HasColumnName("GENERO_ESTUDIANTE");

                    b.Property<int?>("IdListaEscolar")
                        .HasColumnName("ID_LISTA_ESCOLAR");

                    b.Property<string>("NombreColegio")
                        .IsRequired()
                        .HasColumnName("NOMBRE_COLEGIO")
                        .HasMaxLength(120);

                    b.Property<string>("NombreCotizador")
                        .IsRequired()
                        .HasColumnName("NOMBRE_COTIZADOR")
                        .HasMaxLength(100);

                    b.Property<string>("Telefono")
                        .HasColumnName("TELEFONO")
                        .HasMaxLength(15);

                    b.HasKey("IdCotizacion");

                    b.ToTable("COTIZACIONES_LISTA_ESCOLAR");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Cursos", b =>
                {
                    b.Property<int>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_CURSO");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdIndividuo")
                        .HasColumnName("ID_INDIVIDUO");

                    b.Property<string>("Nivel")
                        .HasColumnName("NIVEL")
                        .HasMaxLength(15);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(45);

                    b.Property<int?>("Secuencia")
                        .HasColumnName("SECUENCIA");

                    b.HasKey("IdCurso");

                    b.HasIndex("IdIndividuo")
                        .HasName("IX_ID_INDIVIDUO");

                    b.ToTable("CURSOS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.DescripcionProducto", b =>
                {
                    b.Property<string>("TipoDescripcion")
                        .HasColumnName("TIPO_DESCRIPCION")
                        .HasMaxLength(32);

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<string>("CodIsoIdioma")
                        .IsRequired()
                        .HasColumnName("COD_ISO_IDIOMA")
                        .HasMaxLength(2);

                    b.Property<string>("DescCorta")
                        .HasColumnName("DESC_CORTA")
                        .HasMaxLength(300);

                    b.Property<string>("DescLarga")
                        .HasColumnName("DESC_LARGA")
                        .HasMaxLength(4000);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<string>("NombreProdTraducido")
                        .HasColumnName("NOMBRE_PROD_TRADUCIDO")
                        .HasMaxLength(45);

                    b.HasKey("TipoDescripcion", "IdProducto");

                    b.HasIndex("IdProducto")
                        .HasName("IX_ID_PRODUCTO");

                    b.ToTable("DESCRIPCION_PRODUCTO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Descuentos", b =>
                {
                    b.Property<int>("IdDescuento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_DESCUENTO");

                    b.Property<string>("Codigo")
                        .HasColumnName("CODIGO")
                        .HasMaxLength(45);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCampana")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_CAMPANA")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("MinimoCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MINIMO_COMPRA")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool>("UsoUnico")
                        .HasColumnName("USO_UNICO");

                    b.Property<DateTime>("ValidoDesde")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VALIDO_DESDE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('1900-01-01T00:00:00.000')");

                    b.Property<DateTime>("ValidoHasta")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VALIDO_HASTA")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('1900-01-01T00:00:00.000')");

                    b.Property<decimal>("ValorDescuento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VALOR_DESCUENTO")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdDescuento");

                    b.HasIndex("IdCampana")
                        .HasName("IX_ID_CAMPANA");

                    b.ToTable("DESCUENTOS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.DescuentosUsados", b =>
                {
                    b.Property<string>("IdIdentity")
                        .HasColumnName("ID_IDENTITY")
                        .HasMaxLength(128);

                    b.Property<int>("IdDescuento")
                        .HasColumnName("ID_DESCUENTO");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.HasKey("IdIdentity", "IdDescuento");

                    b.HasIndex("IdDescuento")
                        .HasName("IX_ID_DESCUENTO");

                    b.ToTable("DESCUENTOS_USADOS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.DetallesAjusteInventario", b =>
                {
                    b.Property<int>("IdDetalleAjusteInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_DETALLE_AJUSTE_INVENTARIO");

                    b.Property<int>("Cantidad");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAjusteInventario")
                        .HasColumnName("ID_AJUSTE_INVENTARIO");

                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<decimal>("PorcentajeIva")
                        .HasColumnName("PORCENTAJE_IVA");

                    b.Property<decimal>("PrecioSinIva")
                        .HasColumnName("PRECIO_SIN_IVA");

                    b.Property<string>("TipoAjuste")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime?>("TipoAjuste1")
                        .HasColumnName("TIPO_AJUSTE")
                        .HasColumnType("datetime");

                    b.HasKey("IdDetalleAjusteInventario");

                    b.HasIndex("IdAjusteInventario")
                        .HasName("IX_ID_AJUSTE_INVENTARIO");

                    b.HasIndex("IdArticulo", "IdProducto")
                        .HasName("IX_ID_ARTICULO_ID_PRODUCTO");

                    b.ToTable("DETALLES_AJUSTE_INVENTARIO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.DetallesEntradaInventario", b =>
                {
                    b.Property<int>("IdDetalleEntradaInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_DETALLE_ENTRADA_INVENTARIO");

                    b.Property<int>("Cantidad");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdEntradaInventario")
                        .HasColumnName("ID_ENTRADA_INVENTARIO");

                    b.Property<int>("IdFacturaCompra")
                        .HasColumnName("ID_FACTURA_COMPRA");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<decimal>("PorcentajeIva")
                        .HasColumnName("PORCENTAJE_IVA");

                    b.Property<decimal>("PrecioCompraSinIva")
                        .HasColumnName("PRECIO_COMPRA_SIN_IVA")
                        .HasColumnType("decimal(14, 6)");

                    b.Property<decimal?>("PrecioCompraSinIvaDescuento")
                        .HasColumnName("PRECIO_COMPRA_SIN_IVA_DESCUENTO")
                        .HasColumnType("decimal(14, 6)");

                    b.HasKey("IdDetalleEntradaInventario");

                    b.HasIndex("IdEntradaInventario")
                        .HasName("IX_ID_ENTRADA_INVENTARIO");

                    b.HasIndex("IdFacturaCompra")
                        .HasName("IX_ID_FACTURA_COMPRA");

                    b.HasIndex("IdArticulo", "IdProducto")
                        .HasName("IX_ID_ARTICULO_ID_PRODUCTO");

                    b.ToTable("DETALLES_ENTRADA_INVENTARIO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.DetallesListaPedido", b =>
                {
                    b.Property<int>("IdDetalleListaPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_DETALLE_LISTA_PEDIDO");

                    b.Property<DateTime>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO")
                        .HasColumnType("datetime");

                    b.Property<bool>("EstadoRegistro1")
                        .HasColumnName("EstadoRegistro");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdLista")
                        .HasColumnName("ID_LISTA");

                    b.Property<int>("IdPedido")
                        .HasColumnName("ID_PEDIDO");

                    b.Property<string>("NombreMarcado")
                        .HasColumnName("NOMBRE_MARCADO")
                        .HasMaxLength(35);

                    b.Property<bool>("TieneMarcado")
                        .HasColumnName("TIENE_MARCADO");

                    b.HasKey("IdDetalleListaPedido");

                    b.HasIndex("IdLista")
                        .HasName("IX_ID_LISTA");

                    b.HasIndex("IdPedido")
                        .HasName("IX_ID_PEDIDO");

                    b.ToTable("DETALLES_LISTA_PEDIDO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.DetallesSalidaInventario", b =>
                {
                    b.Property<int>("IdDetalleSalidaInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_DETALLE_SALIDA_INVENTARIO");

                    b.Property<int>("Cantidad");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdFacturaVenta")
                        .HasColumnName("ID_FACTURA_VENTA");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<int>("IdSalidaInventario")
                        .HasColumnName("ID_SALIDA_INVENTARIO");

                    b.Property<decimal>("PorcentajeIva")
                        .HasColumnName("PORCENTAJE_IVA");

                    b.Property<decimal>("PrecioVentaSinIva")
                        .HasColumnName("PRECIO_VENTA_SIN_IVA")
                        .HasColumnType("decimal(13, 6)");

                    b.HasKey("IdDetalleSalidaInventario");

                    b.HasIndex("IdFacturaVenta")
                        .HasName("IX_ID_FACTURA_VENTA");

                    b.HasIndex("IdSalidaInventario")
                        .HasName("IX_ID_SALIDA_INVENTARIO");

                    b.HasIndex("IdArticulo", "IdProducto")
                        .HasName("IX_ID_ARTICULO_ID_PRODUCTO");

                    b.ToTable("DETALLES_SALIDA_INVENTARIO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.EntradasInventario", b =>
                {
                    b.Property<int>("IdEntradaInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_ENTRADA_INVENTARIO");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnName("CONCEPTO")
                        .HasMaxLength(900);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime>("Fecha")
                        .HasColumnName("FECHA")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.HasKey("IdEntradaInventario");

                    b.ToTable("ENTRADAS_INVENTARIO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.EstadisticasIcfes", b =>
                {
                    b.Property<DateTime>("FechaPrueba")
                        .HasColumnName("FECHA_PRUEBA")
                        .HasColumnType("datetime");

                    b.Property<int>("IdIndividuo")
                        .HasColumnName("ID_INDIVIDUO");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<int?>("EstudiantesIcfes")
                        .HasColumnName("ESTUDIANTES_ICFES");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<string>("NivelIcfes")
                        .HasColumnName("NIVEL_ICFES")
                        .HasMaxLength(16);

                    b.Property<decimal?>("PuntajeInstitucion")
                        .HasColumnName("PUNTAJE_INSTITUCION");

                    b.Property<int?>("TotalEstudiantes")
                        .HasColumnName("TOTAL_ESTUDIANTES");

                    b.Property<DateTime?>("UltimaModificacion")
                        .HasColumnName("ULTIMA_MODIFICACION")
                        .HasColumnType("datetime");

                    b.HasKey("FechaPrueba", "IdIndividuo");

                    b.HasIndex("IdIndividuo")
                        .HasName("IX_ID_INDIVIDUO");

                    b.ToTable("ESTADISTICAS_ICFES");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Estantes", b =>
                {
                    b.Property<int>("IdEstante")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_ESTANTE");

                    b.Property<string>("Agrupamiento")
                        .HasColumnName("AGRUPAMIENTO")
                        .HasMaxLength(20);

                    b.Property<string>("CodigoEstante")
                        .IsRequired()
                        .HasColumnName("CODIGO_ESTANTE")
                        .HasMaxLength(20);

                    b.Property<string>("Concepto")
                        .HasColumnName("CONCEPTO")
                        .HasMaxLength(300);

                    b.Property<bool>("EstaDisponible")
                        .HasColumnName("ESTA_DISPONIBLE");

                    b.Property<bool>("EstaLleno")
                        .HasColumnName("ESTA_LLENO");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdBodega")
                        .HasColumnName("ID_BODEGA");

                    b.Property<byte[]>("RowVersion");

                    b.Property<string>("TipoEstante")
                        .IsRequired()
                        .HasColumnName("TIPO_ESTANTE")
                        .HasMaxLength(20);

                    b.HasKey("IdEstante");

                    b.HasIndex("IdBodega")
                        .HasName("IX_ID_BODEGA");

                    b.ToTable("ESTANTES");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.FacturasCompras", b =>
                {
                    b.Property<int>("IdFacturaCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_FACTURA_COMPRA");

                    b.Property<string>("Comentario")
                        .HasColumnName("COMENTARIO")
                        .HasMaxLength(900);

                    b.Property<bool>("EsLegal")
                        .HasColumnName("ES_LEGAL");

                    b.Property<string>("EstadoPago")
                        .IsRequired()
                        .HasColumnName("ESTADO_PAGO")
                        .HasMaxLength(20);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnName("FECHA_COMPRA")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdIndividuo")
                        .HasColumnName("ID_INDIVIDUO");

                    b.Property<decimal>("TotalIvaFactura")
                        .HasColumnName("TOTAL_IVA_FACTURA")
                        .HasColumnType("decimal(15, 6)");

                    b.Property<decimal>("ValorDescuento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VALOR_DESCUENTO")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("ValorIva")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VALOR_IVA")
                        .HasColumnType("decimal(13, 6)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("ValorIvaArreglo")
                        .HasColumnName("VALOR_IVA_ARREGLO")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<decimal>("ValorRetencionFuente")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VALOR_RETENCION_FUENTE")
                        .HasColumnType("decimal(13, 6)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("ValorRetencionFuenteArreglo")
                        .HasColumnName("VALOR_RETENCION_FUENTE_ARREGLO")
                        .HasColumnType("decimal(9, 4)");

                    b.Property<decimal?>("ValorTotalArreglo")
                        .HasColumnName("VALOR_TOTAL_ARREGLO")
                        .HasColumnType("decimal(9, 4)");

                    b.HasKey("IdFacturaCompra");

                    b.HasIndex("IdIndividuo")
                        .HasName("IX_ID_INDIVIDUO");

                    b.ToTable("FACTURAS_COMPRAS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.FacturasVentas", b =>
                {
                    b.Property<int>("IdFacturaVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_FACTURA_VENTA");

                    b.Property<string>("Comentario")
                        .HasColumnName("COMENTARIO")
                        .HasMaxLength(900);

                    b.Property<int?>("DiasAPagar")
                        .HasColumnName("DIAS_A_PAGAR");

                    b.Property<bool>("EsLegal")
                        .HasColumnName("ES_LEGAL");

                    b.Property<string>("EstadoPago")
                        .IsRequired()
                        .HasColumnName("ESTADO_PAGO")
                        .HasMaxLength(20);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaVenta")
                        .HasColumnName("FECHA_VENTA")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCliente")
                        .HasColumnName("ID_CLIENTE");

                    b.Property<int?>("IdFacturaGenerada")
                        .HasColumnName("ID_FACTURA_GENERADA");

                    b.Property<int?>("IdPedido")
                        .HasColumnName("ID_PEDIDO");

                    b.Property<int?>("IdResolucion")
                        .HasColumnName("ID_RESOLUCION");

                    b.Property<string>("NombreArchivo")
                        .HasColumnName("NOMBRE_ARCHIVO");

                    b.Property<decimal>("TotalIvaFactura")
                        .HasColumnName("TOTAL_IVA_FACTURA");

                    b.Property<decimal>("ValorDescuento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VALOR_DESCUENTO")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("ValorEnvio")
                        .HasColumnName("VALOR_ENVIO");

                    b.Property<decimal>("ValorMarcado")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VALOR_MARCADO")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdFacturaVenta");

                    b.HasIndex("IdCliente")
                        .HasName("IX_ID_CLIENTE");

                    b.HasIndex("IdPedido")
                        .HasName("IX_ID_PEDIDO");

                    b.ToTable("FACTURAS_VENTAS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.HistoricoListas", b =>
                {
                    b.Property<DateTime>("FechaCambio")
                        .HasColumnName("FECHA_CAMBIO")
                        .HasColumnType("datetime");

                    b.Property<int>("IdLista")
                        .HasColumnName("ID_LISTA");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaEstProxCambio")
                        .HasColumnName("FECHA_EST_PROX_CAMBIO")
                        .HasColumnType("datetime");

                    b.Property<string>("RegistroCambios")
                        .HasColumnName("REGISTRO_CAMBIOS")
                        .HasMaxLength(900);

                    b.HasKey("FechaCambio", "IdLista");

                    b.HasIndex("IdLista")
                        .HasName("IX_ID_LISTA");

                    b.ToTable("HISTORICO_LISTAS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ImagenesPost", b =>
                {
                    b.Property<int>("IdPostImagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_POST_IMAGEN");

                    b.Property<int?>("IdPost")
                        .HasColumnName("ID_POST");

                    b.Property<int>("Secuencia")
                        .HasColumnName("SECUENCIA");

                    b.Property<string>("TipoImagen")
                        .HasColumnName("TIPO_IMAGEN")
                        .HasMaxLength(20);

                    b.Property<string>("Url")
                        .HasColumnName("URL")
                        .HasMaxLength(300);

                    b.HasKey("IdPostImagen");

                    b.HasIndex("IdPost")
                        .HasName("IX_ID_POST");

                    b.ToTable("IMAGENES_POST");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Individuos", b =>
                {
                    b.Property<int>("IdIndividuo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_INDIVIDUO");

                    b.Property<string>("CodTipoIndividuo")
                        .IsRequired()
                        .HasColumnName("COD_TIPO_INDIVIDUO")
                        .HasMaxLength(30);

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasMaxLength(254);

                    b.Property<string>("Email2")
                        .HasColumnName("EMAIL2")
                        .HasMaxLength(254);

                    b.Property<string>("IdIdentity")
                        .HasColumnName("ID_IDENTITY")
                        .HasMaxLength(128);

                    b.Property<string>("Tel2")
                        .HasColumnName("TEL2")
                        .HasMaxLength(30);

                    b.Property<string>("Telefono")
                        .HasColumnName("TELEFONO")
                        .HasMaxLength(30);

                    b.HasKey("IdIndividuo");

                    b.ToTable("INDIVIDUOS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Instituciones", b =>
                {
                    b.Property<int>("IdIndividuo")
                        .HasColumnName("ID_INDIVIDUO");

                    b.Property<bool>("Aliado")
                        .HasColumnName("ALIADO");

                    b.Property<string>("Calendario")
                        .HasColumnName("CALENDARIO")
                        .HasMaxLength(1);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdDescuento")
                        .HasColumnName("ID_DESCUENTO");

                    b.Property<string>("NombreBuscador")
                        .HasColumnName("NOMBRE_BUSCADOR")
                        .HasMaxLength(200);

                    b.Property<string>("NombreCorto")
                        .HasColumnName("NOMBRE_CORTO")
                        .HasMaxLength(45);

                    b.Property<string>("NombreOficial")
                        .HasColumnName("NOMBRE_OFICIAL")
                        .HasMaxLength(80);

                    b.Property<string>("NumIdentificacion")
                        .HasColumnName("NUM_IDENTIFICACION")
                        .HasMaxLength(16);

                    b.Property<string>("PideLista")
                        .IsRequired()
                        .HasColumnName("PIDE_LISTA")
                        .HasMaxLength(2);

                    b.Property<bool>("Publico")
                        .HasColumnName("PUBLICO");

                    b.Property<string>("TipoIdentificacion")
                        .HasColumnName("TIPO_IDENTIFICACION")
                        .HasMaxLength(3);

                    b.Property<string>("TipoInstitucion")
                        .IsRequired()
                        .HasColumnName("TIPO_INSTITUCION")
                        .HasMaxLength(16);

                    b.Property<string>("UrlLogo")
                        .HasColumnName("URL_LOGO")
                        .HasMaxLength(300);

                    b.Property<string>("UrlLogoMin")
                        .HasColumnName("URL_LOGO_MIN")
                        .HasMaxLength(300);

                    b.HasKey("IdIndividuo");

                    b.HasIndex("IdDescuento")
                        .HasName("IX_ID_DESCUENTO");

                    b.HasIndex("IdIndividuo")
                        .IsUnique()
                        .HasName("IX_ID_INDIVIDUO");

                    b.ToTable("INSTITUCIONES");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Inventario", b =>
                {
                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<int?>("CantidadAjustada")
                        .HasColumnName("CANTIDAD_AJUSTADA");

                    b.Property<int?>("CantidadComprada")
                        .HasColumnName("CANTIDAD_COMPRADA");

                    b.Property<int>("CantidadDisponible")
                        .HasColumnName("CANTIDAD_DISPONIBLE");

                    b.Property<int?>("CantidadPerdida")
                        .HasColumnName("CANTIDAD_PERDIDA");

                    b.Property<int?>("CantidadRegalada")
                        .HasColumnName("CANTIDAD_REGALADA");

                    b.Property<int?>("CantidadVendida")
                        .HasColumnName("CANTIDAD_VENDIDA");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("PrecioPromedioCompraSinIva")
                        .HasColumnName("PRECIO_PROMEDIO_COMPRA_SIN_IVA")
                        .HasColumnType("decimal(14, 6)");

                    b.Property<decimal?>("PrecioPromedioVentaSinIva")
                        .HasColumnName("PRECIO_PROMEDIO_VENTA_SIN_IVA")
                        .HasColumnType("decimal(14, 6)");

                    b.HasKey("IdArticulo", "IdProducto");

                    b.ToTable("INVENTARIO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.KeywordsArticulos", b =>
                {
                    b.Property<int>("ArticulosIdArticulo")
                        .HasColumnName("ARTICULOS_ID_ARTICULO");

                    b.Property<int>("ArticulosIdProducto")
                        .HasColumnName("ARTICULOS_ID_PRODUCTO");

                    b.Property<int>("PalabrasClaveIdPalabra")
                        .HasColumnName("PALABRAS_CLAVE_ID_PALABRA");

                    b.HasKey("ArticulosIdArticulo", "ArticulosIdProducto", "PalabrasClaveIdPalabra");

                    b.HasIndex("PalabrasClaveIdPalabra")
                        .HasName("IX_PALABRAS_CLAVE_ID_PALABRA");

                    b.HasIndex("ArticulosIdArticulo", "ArticulosIdProducto")
                        .HasName("IX_ARTICULOS_ID_ARTICULO_ARTICULOS_ID_PRODUCTO");

                    b.ToTable("KEYWORDS_ARTICULOS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.KeywordsCategorias", b =>
                {
                    b.Property<int>("CategoriasIdCategoria")
                        .HasColumnName("CATEGORIAS_ID_CATEGORIA");

                    b.Property<int>("PalabrasClaveIdPalabra")
                        .HasColumnName("PALABRAS_CLAVE_ID_PALABRA");

                    b.HasKey("CategoriasIdCategoria", "PalabrasClaveIdPalabra");

                    b.HasIndex("CategoriasIdCategoria")
                        .HasName("IX_CATEGORIAS_ID_CATEGORIA");

                    b.HasIndex("PalabrasClaveIdPalabra")
                        .HasName("IX_PALABRAS_CLAVE_ID_PALABRA");

                    b.ToTable("KEYWORDS_CATEGORIAS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.KeywordsProductos", b =>
                {
                    b.Property<int>("ProductosIdProducto")
                        .HasColumnName("PRODUCTOS_ID_PRODUCTO");

                    b.Property<int>("PalabrasClaveIdPalabra")
                        .HasColumnName("PALABRAS_CLAVE_ID_PALABRA");

                    b.HasKey("ProductosIdProducto", "PalabrasClaveIdPalabra");

                    b.HasIndex("PalabrasClaveIdPalabra")
                        .HasName("IX_PALABRAS_CLAVE_ID_PALABRA");

                    b.HasIndex("ProductosIdProducto")
                        .HasName("IX_PRODUCTOS_ID_PRODUCTO");

                    b.ToTable("KEYWORDS_PRODUCTOS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ListasEscolares", b =>
                {
                    b.Property<int>("IdLista")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_LISTA");

                    b.Property<string>("Alerta")
                        .HasColumnName("ALERTA")
                        .HasMaxLength(600);

                    b.Property<int?>("AnoLista")
                        .HasColumnName("ANO_LISTA");

                    b.Property<string>("CodUnicoListaencasa")
                        .HasColumnName("COD_UNICO_LISTAENCASA")
                        .HasMaxLength(64);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCurso")
                        .HasColumnName("ID_CURSO");

                    b.Property<string>("Origen")
                        .HasColumnName("ORIGEN")
                        .HasMaxLength(32);

                    b.HasKey("IdLista");

                    b.HasIndex("IdCurso")
                        .HasName("IX_ID_CURSO");

                    b.ToTable("LISTAS_ESCOLARES");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Marcas", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_MARCA");

                    b.Property<string>("Descripcion")
                        .HasColumnName("DESCRIPCION")
                        .HasMaxLength(300);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(45);

                    b.HasKey("IdMarca");

                    b.ToTable("MARCAS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.MarcasProveedor", b =>
                {
                    b.Property<int>("MarcasIdMarca")
                        .HasColumnName("MARCAS_ID_MARCA");

                    b.Property<int>("ProveedoresIdIndividuo")
                        .HasColumnName("PROVEEDORES_ID_INDIVIDUO");

                    b.HasKey("MarcasIdMarca", "ProveedoresIdIndividuo");

                    b.HasIndex("MarcasIdMarca")
                        .HasName("IX_MARCAS_ID_MARCA");

                    b.HasIndex("ProveedoresIdIndividuo")
                        .HasName("IX_PROVEEDORES_ID_INDIVIDUO");

                    b.ToTable("MARCAS_PROVEEDOR");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.MigrationHistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasMaxLength(150);

                    b.Property<string>("ContextKey")
                        .HasMaxLength(300);

                    b.Property<byte[]>("Model")
                        .IsRequired();

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.HasKey("MigrationId", "ContextKey");

                    b.ToTable("__MigrationHistory");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.MovimientosInventario", b =>
                {
                    b.Property<int>("IdMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_MOVIMIENTO");

                    b.Property<int>("Cantidad")
                        .HasColumnName("CANTIDAD");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdDetalleHijo")
                        .HasColumnName("ID_DETALLE_HIJO");

                    b.Property<int?>("IdDetallePadre")
                        .HasColumnName("ID_DETALLE_PADRE");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<decimal?>("PorcentajeIva")
                        .HasColumnName("PORCENTAJE_IVA");

                    b.Property<int>("TipoMovimiento")
                        .HasColumnName("TIPO_MOVIMIENTO");

                    b.Property<decimal>("ValorMovimientoSinIva")
                        .HasColumnName("VALOR_MOVIMIENTO_SIN_IVA");

                    b.HasKey("IdMovimiento");

                    b.ToTable("MOVIMIENTOS_INVENTARIO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.OrdenCompra", b =>
                {
                    b.Property<int>("IdOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_ORDEN");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaLimite")
                        .HasColumnName("FECHA_LIMITE")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FECHA_PEDIDO")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('1900-01-01T00:00:00.000')");

                    b.Property<string>("ObservacionesGenerales")
                        .HasColumnName("OBSERVACIONES_GENERALES")
                        .HasMaxLength(900);

                    b.Property<int?>("ProveedorIdIndividuo")
                        .HasColumnName("Proveedor_IdIndividuo");

                    b.HasKey("IdOrden");

                    b.HasIndex("ProveedorIdIndividuo")
                        .HasName("IX_Proveedor_IdIndividuo");

                    b.ToTable("ORDEN_COMPRA");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Paises", b =>
                {
                    b.Property<string>("CodigoPais")
                        .HasColumnName("CODIGO_PAIS")
                        .HasColumnType("nchar(2)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<string>("Idioma")
                        .HasColumnName("IDIOMA")
                        .HasMaxLength(16);

                    b.Property<string>("Moneda")
                        .HasColumnName("MONEDA")
                        .HasMaxLength(3);

                    b.Property<string>("NombrePais")
                        .HasColumnName("NOMBRE_PAIS")
                        .HasMaxLength(40);

                    b.HasKey("CodigoPais");

                    b.ToTable("PAISES");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.PalabrasClave", b =>
                {
                    b.Property<int>("IdPalabra")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PALABRA");

                    b.Property<string>("CodIsoIdioma")
                        .IsRequired()
                        .HasColumnName("COD_ISO_IDIOMA")
                        .HasMaxLength(2);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<string>("Palabra")
                        .HasColumnName("PALABRA")
                        .HasMaxLength(45);

                    b.HasKey("IdPalabra");

                    b.ToTable("PALABRAS_CLAVE");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Parametrizaciones", b =>
                {
                    b.Property<int>("IdParametro")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PARAMETRO");

                    b.Property<string>("Descripcion")
                        .HasColumnName("DESCRIPCION")
                        .HasMaxLength(900);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int?>("ParametroEntero")
                        .HasColumnName("PARAMETRO_ENTERO");

                    b.Property<string>("ParametroString")
                        .HasColumnName("PARAMETRO_STRING")
                        .HasMaxLength(300);

                    b.Property<string>("TipoParametro")
                        .IsRequired()
                        .HasColumnName("TIPO_PARAMETRO")
                        .HasMaxLength(30);

                    b.HasKey("IdParametro");

                    b.ToTable("PARAMETRIZACIONES");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Parrafos", b =>
                {
                    b.Property<int>("IdParrafo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PARRAFO");

                    b.Property<int>("IdPost")
                        .HasColumnName("ID_POST");

                    b.Property<string>("Quote")
                        .HasColumnName("QUOTE")
                        .HasMaxLength(2000);

                    b.Property<int>("Secuencia")
                        .HasColumnName("SECUENCIA");

                    b.Property<string>("Texto")
                        .HasColumnName("TEXTO")
                        .HasMaxLength(3000);

                    b.Property<string>("TipoParrafo")
                        .HasColumnName("TIPO_PARRAFO")
                        .HasMaxLength(20);

                    b.HasKey("IdParrafo");

                    b.HasIndex("IdPost")
                        .HasName("IX_ID_POST");

                    b.ToTable("PARRAFOS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.PayuResponseLog", b =>
                {
                    b.Property<int>("IdPayuResponse")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PAYU_RESPONSE");

                    b.Property<bool>("Checked")
                        .HasColumnName("CHECKED");

                    b.Property<string>("CodigoReferencia")
                        .IsRequired()
                        .HasColumnName("CODIGO_REFERENCIA")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMAIL")
                        .HasMaxLength(100);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdUsuario")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasColumnName("IDENTIFICADOR")
                        .HasMaxLength(30);

                    b.Property<decimal>("Iva")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IVA")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LapPaymentMethod")
                        .HasColumnName("LAP_PAYMENT_METHOD")
                        .HasMaxLength(255);

                    b.Property<string>("LapPaymentMethodType")
                        .HasColumnName("LAP_PAYMENT_METHOD_TYPE")
                        .HasMaxLength(255);

                    b.Property<string>("LapResponseCode")
                        .HasColumnName("LAP_RESPONSE_CODE")
                        .HasMaxLength(64);

                    b.Property<string>("LapTransactionState")
                        .HasColumnName("LAP_TRANSACTION_STATE")
                        .HasMaxLength(32);

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnName("MENSAJE")
                        .HasMaxLength(400);

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnName("NOMBRE_USUARIO")
                        .HasMaxLength(100);

                    b.Property<string>("OrigenError")
                        .HasColumnName("ORIGEN_ERROR")
                        .HasMaxLength(100);

                    b.Property<string>("PolReference")
                        .HasColumnName("POL_REFERENCE")
                        .HasMaxLength(255);

                    b.Property<string>("PolResponseCode")
                        .HasColumnName("POL_RESPONSE_CODE")
                        .HasMaxLength(64);

                    b.Property<string>("PolTransactionState")
                        .HasColumnName("POL_TRANSACTION_STATE")
                        .HasMaxLength(32);

                    b.Property<int>("TransactionState")
                        .HasColumnName("TRANSACTION_STATE");

                    b.Property<decimal>("ValorPagado")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VALOR_PAGADO")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdPayuResponse");

                    b.ToTable("PAYU_RESPONSE_LOG");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.PedidoInfoPayu", b =>
                {
                    b.Property<int>("IdPedidoInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PEDIDO_INFO");

                    b.Property<string>("CodigoAutorizacionVenta")
                        .HasColumnName("CODIGO_AUTORIZACION_VENTA")
                        .HasMaxLength(12);

                    b.Property<string>("CodigoReferencia")
                        .IsRequired()
                        .HasColumnName("CODIGO_REFERENCIA")
                        .HasMaxLength(50);

                    b.Property<string>("CodigoSeguimiento")
                        .HasColumnName("CODIGO_SEGUIMIENTO")
                        .HasMaxLength(64);

                    b.Property<int?>("Cuotas")
                        .HasColumnName("CUOTAS");

                    b.Property<string>("Descripción")
                        .HasColumnName("DESCRIPCIÓN")
                        .HasMaxLength(255);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnName("FECHA_PAGO")
                        .HasColumnType("datetime");

                    b.Property<int>("IdPedido")
                        .HasColumnName("ID_PEDIDO");

                    b.Property<decimal?>("ImpuestoTx")
                        .HasColumnName("IMPUESTO_TX");

                    b.Property<decimal>("Iva")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IVA")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LapResponseCode")
                        .HasColumnName("LAP_RESPONSE_CODE")
                        .HasMaxLength(64);

                    b.Property<string>("MensajeTransaccion")
                        .HasColumnName("MENSAJE_TRANSACCION")
                        .HasMaxLength(255);

                    b.Property<string>("Moneda")
                        .HasColumnName("MONEDA")
                        .HasMaxLength(3);

                    b.Property<string>("PolResponseCode")
                        .HasColumnName("POL_RESPONSE_CODE")
                        .HasMaxLength(64);

                    b.Property<string>("PolTransactionState")
                        .HasColumnName("POL_TRANSACTION_STATE")
                        .HasMaxLength(32);

                    b.Property<string>("PseCodigoSeguimiento")
                        .HasColumnName("PSE_CODIGO_SEGUIMIENTO")
                        .HasMaxLength(255);

                    b.Property<int?>("PseId")
                        .HasColumnName("PSE_ID");

                    b.Property<string>("PseReference1")
                        .HasColumnName("PSE_REFERENCE1")
                        .HasMaxLength(255);

                    b.Property<string>("PseReference2")
                        .HasColumnName("PSE_REFERENCE2")
                        .HasMaxLength(255);

                    b.Property<string>("PseReference3")
                        .HasColumnName("PSE_REFERENCE3")
                        .HasMaxLength(255);

                    b.Property<string>("ReferencePol")
                        .HasColumnName("REFERENCE_POL")
                        .HasMaxLength(255);

                    b.Property<decimal?>("Riesgo")
                        .HasColumnName("RIESGO");

                    b.Property<decimal?>("TarifaAdministrativaTx")
                        .HasColumnName("TARIFA_ADMINISTRATIVA_TX");

                    b.Property<string>("TelefonoUsuarioPago")
                        .HasColumnName("TELEFONO_USUARIO_PAGO")
                        .HasMaxLength(20);

                    b.Property<string>("TransaccionId")
                        .HasColumnName("TRANSACCION_ID")
                        .HasMaxLength(36);

                    b.Property<decimal?>("ValorBaseTx")
                        .HasColumnName("VALOR_BASE_TX");

                    b.Property<decimal>("ValorPagado")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VALOR_PAGADO")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("IdPedidoInfo");

                    b.HasIndex("IdPedido")
                        .HasName("IX_ID_PEDIDO");

                    b.ToTable("PEDIDO_INFO_PAYU");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Pedidos", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PEDIDO");

                    b.Property<string>("Comentario")
                        .HasColumnName("COMENTARIO")
                        .HasMaxLength(255);

                    b.Property<decimal?>("CostoEnvio")
                        .HasColumnName("COSTO_ENVIO");

                    b.Property<decimal?>("CostoMarcado")
                        .HasColumnName("COSTO_MARCADO");

                    b.Property<string>("Curso")
                        .HasColumnName("CURSO")
                        .HasMaxLength(50);

                    b.Property<string>("EstadoDePago")
                        .HasColumnName("ESTADO_DE_PAGO")
                        .HasMaxLength(32);

                    b.Property<string>("EstadoDePedido")
                        .HasColumnName("ESTADO_DE_PEDIDO")
                        .HasMaxLength(32);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaClienteCe")
                        .HasColumnName("FECHA_CLIENTE_CE")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnName("FECHA_PEDIDO")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdDescuento")
                        .HasColumnName("ID_DESCUENTO");

                    b.Property<int>("IdIndividuo")
                        .HasColumnName("ID_INDIVIDUO");

                    b.Property<int?>("IdOrdenCompra")
                        .HasColumnName("ID_ORDEN_COMPRA");

                    b.Property<int>("IdUbicacion")
                        .HasColumnName("ID_UBICACION")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("MedioPago")
                        .HasColumnName("MEDIO_PAGO")
                        .HasMaxLength(32);

                    b.Property<string>("NombreEstudiante")
                        .HasColumnName("NOMBRE_ESTUDIANTE")
                        .HasMaxLength(120);

                    b.Property<string>("NombreMarcado")
                        .HasColumnName("NOMBRE_MARCADO")
                        .HasMaxLength(100);

                    b.Property<string>("NumFactura")
                        .HasColumnName("NUM_FACTURA")
                        .HasMaxLength(50);

                    b.Property<string>("TipoPago")
                        .HasColumnName("TIPO_PAGO")
                        .HasMaxLength(32);

                    b.Property<decimal?>("Total")
                        .HasColumnName("TOTAL");

                    b.HasKey("IdPedido");

                    b.HasIndex("IdDescuento")
                        .HasName("IX_ID_DESCUENTO");

                    b.HasIndex("IdIndividuo")
                        .HasName("IX_ID_INDIVIDUO");

                    b.HasIndex("IdOrdenCompra")
                        .HasName("IX_ID_ORDEN_COMPRA");

                    b.HasIndex("IdUbicacion")
                        .HasName("IX_ID_UBICACION");

                    b.ToTable("PEDIDOS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Personas", b =>
                {
                    b.Property<int>("IdIndividuo")
                        .HasColumnName("ID_INDIVIDUO");

                    b.Property<bool?>("ClienteIdentity")
                        .HasColumnName("CLIENTE_IDENTITY");

                    b.Property<string>("EstadoCivil")
                        .HasColumnName("ESTADO_CIVIL")
                        .HasMaxLength(16);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnName("FECHA_NACIMIENTO")
                        .HasColumnType("datetime");

                    b.Property<string>("Genero")
                        .HasColumnName("GENERO")
                        .HasMaxLength(1);

                    b.Property<string>("Ingresos")
                        .HasColumnName("INGRESOS")
                        .HasMaxLength(20);

                    b.Property<int?>("NumHijos")
                        .HasColumnName("NUM_HIJOS");

                    b.Property<string>("NumIdentificacion")
                        .HasColumnName("NUM_IDENTIFICACION")
                        .HasMaxLength(15);

                    b.Property<string>("PrimerApellido")
                        .HasColumnName("PRIMER_APELLIDO")
                        .HasMaxLength(32);

                    b.Property<string>("PrimerNombre")
                        .HasColumnName("PRIMER_NOMBRE")
                        .HasMaxLength(120);

                    b.Property<string>("SegundoApellido")
                        .HasColumnName("SEGUNDO_APELLIDO")
                        .HasMaxLength(32);

                    b.Property<string>("SegundoNombre")
                        .HasColumnName("SEGUNDO_NOMBRE")
                        .HasMaxLength(32);

                    b.Property<string>("TipoIdentificacion")
                        .HasColumnName("TIPO_IDENTIFICACION")
                        .HasMaxLength(3);

                    b.Property<string>("TipoPersona")
                        .HasColumnName("TIPO_PERSONA")
                        .HasMaxLength(20);

                    b.HasKey("IdIndividuo");

                    b.HasIndex("IdIndividuo")
                        .IsUnique()
                        .HasName("IX_ID_INDIVIDUO");

                    b.ToTable("PERSONAS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Posts", b =>
                {
                    b.Property<int>("IdPost")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_POST");

                    b.Property<string>("Autor")
                        .HasColumnName("AUTOR")
                        .HasMaxLength(90);

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasMaxLength(80);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime>("FechaActualizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('1900-01-01T00:00:00.000')");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('1900-01-01T00:00:00.000')");

                    b.Property<string>("Resumen")
                        .HasColumnName("RESUMEN")
                        .HasMaxLength(500);

                    b.Property<bool>("TieneImagen")
                        .HasColumnName("TIENE_IMAGEN");

                    b.Property<string>("TipoPost")
                        .HasColumnName("TIPO_POST")
                        .HasMaxLength(20);

                    b.Property<string>("Titulo")
                        .HasColumnName("TITULO")
                        .HasMaxLength(80);

                    b.Property<string>("UrlImagenPrincipal")
                        .HasColumnName("URL_IMAGEN_PRINCIPAL")
                        .HasMaxLength(300);

                    b.HasKey("IdPost");

                    b.ToTable("POSTS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Precios", b =>
                {
                    b.Property<int>("IdPrecio")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PRECIO");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnName("FECHA_VENCIMIENTO")
                        .HasColumnType("datetime");

                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasColumnName("MONEDA")
                        .HasMaxLength(3);

                    b.Property<decimal>("Monto")
                        .HasColumnName("MONTO");

                    b.Property<bool>("PorDefecto")
                        .HasColumnName("POR_DEFECTO");

                    b.Property<decimal?>("PrecioLinio")
                        .HasColumnName("PRECIO_LINIO");

                    b.Property<string>("TipoCliente1")
                        .HasColumnName("TIPO_CLIENTE1")
                        .HasMaxLength(32);

                    b.Property<string>("TipoCliente2")
                        .HasColumnName("TIPO_CLIENTE2")
                        .HasMaxLength(32);

                    b.HasKey("IdPrecio");

                    b.HasIndex("IdArticulo", "IdProducto")
                        .HasName("IX_ID_ARTICULO_ID_PRODUCTO");

                    b.ToTable("PRECIOS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.PrePedidos", b =>
                {
                    b.Property<int>("IdPrePedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PRE_PEDIDO");

                    b.Property<bool>("Checked")
                        .HasColumnName("CHECKED");

                    b.Property<string>("Ciudad")
                        .HasColumnName("CIUDAD")
                        .HasMaxLength(50);

                    b.Property<string>("CodigoDescuento")
                        .HasColumnName("CODIGO_DESCUENTO");

                    b.Property<string>("CodigoPais")
                        .HasColumnName("CODIGO_PAIS")
                        .HasMaxLength(2);

                    b.Property<decimal?>("CostoEnvio")
                        .HasColumnName("COSTO_ENVIO");

                    b.Property<decimal?>("CostoMarcado")
                        .HasColumnName("COSTO_MARCADO");

                    b.Property<string>("Direccion")
                        .HasColumnName("DIRECCION")
                        .HasMaxLength(120);

                    b.Property<string>("Email")
                        .HasColumnName("EMAIL")
                        .HasMaxLength(254);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdPersona")
                        .HasColumnName("ID_PERSONA");

                    b.Property<int?>("IdUbicacion")
                        .HasColumnName("ID_UBICACION");

                    b.Property<string>("Nombre")
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(120);

                    b.Property<string>("NombreMarcado")
                        .HasColumnName("NOMBRE_MARCADO")
                        .HasMaxLength(100);

                    b.Property<string>("NumFactura")
                        .HasColumnName("NUM_FACTURA")
                        .HasMaxLength(50);

                    b.Property<string>("NumIdentificacion")
                        .HasColumnName("NUM_IDENTIFICACION")
                        .HasMaxLength(15);

                    b.Property<string>("Telefono")
                        .HasColumnName("TELEFONO")
                        .HasMaxLength(32);

                    b.Property<string>("TipoDescuento")
                        .HasColumnName("TIPO_DESCUENTO");

                    b.Property<decimal?>("Total")
                        .HasColumnName("TOTAL");

                    b.Property<decimal?>("ValorDescuento")
                        .HasColumnName("VALOR_DESCUENTO");

                    b.HasKey("IdPrePedido");

                    b.ToTable("PRE_PEDIDOS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Productos", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<bool>("Disponible")
                        .HasColumnName("DISPONIBLE");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnName("FECHA_VENCIMIENTO")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdCategoriaContabilidad")
                        .HasColumnName("ID_CATEGORIA_CONTABILIDAD");

                    b.Property<int>("IdMarca")
                        .HasColumnName("ID_MARCA");

                    b.Property<int?>("IdUnidadVenta");

                    b.Property<string>("LargeImgUrl")
                        .HasColumnName("LARGE_IMG_URL")
                        .HasMaxLength(600);

                    b.Property<string>("MediumImgUrl")
                        .HasColumnName("MEDIUM_IMG_URL")
                        .HasMaxLength(600);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(45);

                    b.Property<string>("NombreBuscador")
                        .HasColumnName("NOMBRE_BUSCADOR")
                        .HasMaxLength(200);

                    b.Property<int?>("NumeroUnidVenta")
                        .HasColumnName("NUMERO_UNID_VENTA");

                    b.Property<int?>("Peso")
                        .HasColumnName("PESO");

                    b.Property<bool>("PorMayor")
                        .HasColumnName("POR_MAYOR");

                    b.Property<int?>("Prioridad")
                        .HasColumnName("PRIORIDAD");

                    b.Property<int?>("Secuencia")
                        .HasColumnName("SECUENCIA");

                    b.Property<string>("SmallImgUrl")
                        .HasColumnName("SMALL_IMG_URL")
                        .HasMaxLength(600);

                    b.Property<bool?>("TieneImagen")
                        .HasColumnName("TIENE_IMAGEN");

                    b.Property<int?>("ValorMarcado")
                        .HasColumnName("VALOR_MARCADO");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdCategoriaContabilidad")
                        .HasName("IX_ID_CATEGORIA_CONTABILIDAD");

                    b.HasIndex("IdMarca")
                        .HasName("IX_ID_MARCA");

                    b.ToTable("PRODUCTOS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ProductosRespaldo", b =>
                {
                    b.Property<int>("IdRespaldo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_RESPALDO");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<bool>("Genero")
                        .HasColumnName("GENERO");

                    b.Property<int>("IdArticulo")
                        .HasColumnName("ID_ARTICULO");

                    b.Property<int>("IdArticuloRes")
                        .HasColumnName("ID_ARTICULO_RES");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<int>("IdProductoRes")
                        .HasColumnName("ID_PRODUCTO_RES");

                    b.Property<int?>("Prioridad")
                        .HasColumnName("PRIORIDAD");

                    b.HasKey("IdRespaldo");

                    b.HasIndex("IdArticulo", "IdProducto")
                        .HasName("IX_ID_ARTICULO_ID_PRODUCTO");

                    b.HasIndex("IdArticuloRes", "IdProductoRes")
                        .HasName("IX_ID_ARTICULO_RES_ID_PRODUCTO_RES");

                    b.ToTable("PRODUCTOS_RESPALDO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Proveedores", b =>
                {
                    b.Property<int>("IdIndividuo")
                        .HasColumnName("ID_INDIVIDUO");

                    b.Property<bool?>("Autoretenedor")
                        .HasColumnName("AUTORETENEDOR");

                    b.Property<bool?>("DanCredito")
                        .HasColumnName("DAN_CREDITO");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAcvtividadEconomica")
                        .HasColumnName("ID_ACVTIVIDAD_ECONOMICA")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("NombreComercial")
                        .HasColumnName("NOMBRE_COMERCIAL");

                    b.Property<string>("NumIdentificacion")
                        .HasColumnName("NUM_IDENTIFICACION")
                        .HasMaxLength(16);

                    b.Property<bool?>("PagoTarjeta")
                        .HasColumnName("PAGO_TARJETA");

                    b.Property<string>("RazonSocial")
                        .HasColumnName("RAZON_SOCIAL")
                        .HasMaxLength(64);

                    b.Property<int?>("Secuencia")
                        .HasColumnName("SECUENCIA");

                    b.Property<string>("TipoIdentificacion")
                        .HasColumnName("TIPO_IDENTIFICACION")
                        .HasMaxLength(3);

                    b.Property<string>("TipoProveedor")
                        .HasColumnName("TIPO_PROVEEDOR")
                        .HasMaxLength(32);

                    b.Property<string>("UrlSitioWeb")
                        .HasColumnName("URL_SITIO_WEB")
                        .HasMaxLength(300);

                    b.Property<double?>("ValorCompraMin")
                        .HasColumnName("VALOR_COMPRA_MIN");

                    b.HasKey("IdIndividuo");

                    b.HasIndex("IdAcvtividadEconomica")
                        .HasName("IX_ID_ACVTIVIDAD_ECONOMICA");

                    b.HasIndex("IdIndividuo")
                        .IsUnique()
                        .HasName("IX_ID_INDIVIDUO");

                    b.ToTable("PROVEEDORES");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Quotes", b =>
                {
                    b.Property<int>("IdQuote")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_QUOTE");

                    b.Property<int?>("IdParrafo")
                        .HasColumnName("ID_PARRAFO");

                    b.Property<int>("Secuencia")
                        .HasColumnName("SECUENCIA");

                    b.Property<string>("Texto")
                        .HasColumnName("TEXTO")
                        .HasMaxLength(3000);

                    b.Property<string>("TipoQuote")
                        .HasColumnName("TIPO_QUOTE")
                        .HasMaxLength(20);

                    b.HasKey("IdQuote");

                    b.HasIndex("IdParrafo")
                        .HasName("IX_ID_PARRAFO");

                    b.ToTable("QUOTES");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Regiones", b =>
                {
                    b.Property<int>("IdRegion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_REGION");

                    b.Property<string>("CodigoPais")
                        .IsRequired()
                        .HasColumnName("CODIGO_PAIS")
                        .HasColumnType("nchar(2)");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(100);

                    b.HasKey("IdRegion");

                    b.HasIndex("CodigoPais")
                        .HasName("IX_CODIGO_PAIS");

                    b.ToTable("REGIONES");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ResolucionFactura", b =>
                {
                    b.Property<int>("IdResolucion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_RESOLUCION");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("CODIGO")
                        .HasMaxLength(80);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaLimite")
                        .HasColumnName("FECHA_LIMITE")
                        .HasColumnType("datetime");

                    b.Property<int>("LimiteFacturas")
                        .HasColumnName("LIMITE_FACTURAS");

                    b.Property<bool>("Notificacion")
                        .HasColumnName("NOTIFICACION");

                    b.HasKey("IdResolucion");

                    b.ToTable("RESOLUCION_FACTURA");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.SalidasInventario", b =>
                {
                    b.Property<int>("IdSalidaInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_SALIDA_INVENTARIO");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnName("CONCEPTO")
                        .HasMaxLength(900);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime>("Fecha")
                        .HasColumnName("FECHA")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.HasKey("IdSalidaInventario");

                    b.ToTable("SALIDAS_INVENTARIO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Sedes", b =>
                {
                    b.Property<int>("IdSede")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_SEDE");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<string>("FuncionAdicional1")
                        .HasColumnName("FUNCION_ADICIONAL_1")
                        .HasMaxLength(16);

                    b.Property<string>("FuncionAdicional2")
                        .HasColumnName("FUNCION_ADICIONAL_2")
                        .HasMaxLength(16);

                    b.Property<string>("FuncionAdicional3")
                        .HasColumnName("FUNCION_ADICIONAL_3")
                        .HasMaxLength(16);

                    b.Property<string>("FuncionPrincipal")
                        .HasColumnName("FUNCION_PRINCIPAL")
                        .HasMaxLength(16);

                    b.Property<int?>("IdIndividuo")
                        .HasColumnName("ID_INDIVIDUO");

                    b.Property<int>("IdUbicacion")
                        .HasColumnName("ID_UBICACION");

                    b.Property<string>("TipoSede")
                        .HasColumnName("TIPO_SEDE")
                        .HasMaxLength(16);

                    b.HasKey("IdSede");

                    b.HasIndex("IdIndividuo")
                        .HasName("IX_ID_INDIVIDUO");

                    b.HasIndex("IdUbicacion")
                        .HasName("IX_ID_UBICACION");

                    b.ToTable("SEDES");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Subtitulos", b =>
                {
                    b.Property<int>("IdSubtitulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_SUBTITULO");

                    b.Property<int?>("IdPost")
                        .HasColumnName("ID_POST");

                    b.Property<int>("Secuencia")
                        .HasColumnName("SECUENCIA");

                    b.Property<string>("Texto")
                        .HasColumnName("TEXTO")
                        .HasMaxLength(300);

                    b.Property<string>("TipoEstilo")
                        .HasColumnName("TIPO_ESTILO")
                        .HasMaxLength(30);

                    b.HasKey("IdSubtitulo");

                    b.HasIndex("IdPost")
                        .HasName("IX_ID_POST");

                    b.ToTable("SUBTITULOS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.TipoAtributos", b =>
                {
                    b.Property<int>("IdTipo")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_TIPO");

                    b.Property<string>("Descripcion")
                        .HasColumnName("DESCRIPCION")
                        .HasMaxLength(300);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(45);

                    b.HasKey("IdTipo");

                    b.ToTable("TIPO_ATRIBUTOS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.TrazabilidadCompras", b =>
                {
                    b.Property<int>("IdDetalleEntradaInventario")
                        .HasColumnName("ID_DETALLE_ENTRADA_INVENTARIO");

                    b.Property<int>("IdDetalleOrdenCompra")
                        .HasColumnName("ID_DETALLE_ORDEN_COMPRA");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.HasKey("IdDetalleEntradaInventario", "IdDetalleOrdenCompra");

                    b.HasIndex("IdDetalleEntradaInventario")
                        .HasName("IX_ID_DETALLE_ENTRADA_INVENTARIO");

                    b.HasIndex("IdDetalleOrdenCompra")
                        .HasName("IX_ID_DETALLE_ORDEN_COMPRA");

                    b.ToTable("TRAZABILIDAD_COMPRAS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Ubicaciones", b =>
                {
                    b.Property<int>("IdUbicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_UBICACION");

                    b.Property<string>("Barrio")
                        .HasColumnName("BARRIO")
                        .HasMaxLength(32);

                    b.Property<string>("CodigoPostal")
                        .HasColumnName("CODIGO_POSTAL")
                        .HasMaxLength(16);

                    b.Property<string>("ComplementoDireccion")
                        .HasColumnName("COMPLEMENTO_DIRECCION")
                        .HasMaxLength(32);

                    b.Property<string>("CoordenadasGmaps")
                        .HasColumnName("COORDENADAS_GMAPS");

                    b.Property<string>("Departamento")
                        .HasColumnName("DEPARTAMENTO")
                        .HasMaxLength(32);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnName("DIRECCION")
                        .HasMaxLength(120);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<int?>("Estrato")
                        .HasColumnName("ESTRATO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCiudad")
                        .HasColumnName("ID_CIUDAD");

                    b.Property<string>("Localidad")
                        .HasColumnName("LOCALIDAD")
                        .HasMaxLength(32);

                    b.Property<int?>("RiesgoZona")
                        .HasColumnName("RIESGO_ZONA");

                    b.HasKey("IdUbicacion");

                    b.HasIndex("IdCiudad")
                        .HasName("IX_ID_CIUDAD");

                    b.ToTable("UBICACIONES");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.UbicPersonas", b =>
                {
                    b.Property<int>("UbicacionesIdUbicacion")
                        .HasColumnName("UBICACIONES_ID_UBICACION");

                    b.Property<int>("PersonasIdIndividuo")
                        .HasColumnName("PERSONAS_ID_INDIVIDUO");

                    b.HasKey("UbicacionesIdUbicacion", "PersonasIdIndividuo");

                    b.HasIndex("PersonasIdIndividuo")
                        .HasName("IX_PERSONAS_ID_INDIVIDUO");

                    b.HasIndex("UbicacionesIdUbicacion")
                        .HasName("IX_UBICACIONES_ID_UBICACION");

                    b.ToTable("UBIC_PERSONAS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.UnidadesVenta", b =>
                {
                    b.Property<int>("IdUnidVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_UNID_VENTA");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(45);

                    b.Property<string>("Simbolo")
                        .HasColumnName("SIMBOLO")
                        .HasMaxLength(3);

                    b.HasKey("IdUnidVenta");

                    b.ToTable("UNIDADES_VENTA");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Valoraciones", b =>
                {
                    b.Property<int>("IdIndividuo")
                        .HasColumnName("ID_INDIVIDUO");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<string>("Comentario")
                        .HasColumnName("COMENTARIO")
                        .HasMaxLength(1000);

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaComentario")
                        .HasColumnName("FECHA_COMENTARIO")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("Ranking")
                        .HasColumnName("RANKING");

                    b.Property<string>("Titulo")
                        .HasColumnName("TITULO")
                        .HasMaxLength(60);

                    b.HasKey("IdIndividuo", "IdProducto");

                    b.HasIndex("IdIndividuo")
                        .HasName("IX_ID_INDIVIDUO");

                    b.HasIndex("IdProducto")
                        .HasName("IX_ID_PRODUCTO");

                    b.ToTable("VALORACIONES");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ValorAtributo", b =>
                {
                    b.Property<int>("IdValor")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_VALOR");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAtributo")
                        .HasColumnName("ID_ATRIBUTO");

                    b.Property<int>("IdTipo")
                        .HasColumnName("ID_TIPO");

                    b.Property<int?>("IdUnidVenta")
                        .HasColumnName("ID_UNID_VENTA");

                    b.Property<int>("Secuencia")
                        .HasColumnName("SECUENCIA");

                    b.Property<string>("ValorBlob")
                        .HasColumnName("VALOR_BLOB");

                    b.Property<bool?>("ValorBool");

                    b.Property<string>("ValorCadena")
                        .HasColumnName("VALOR_CADENA")
                        .HasMaxLength(45);

                    b.Property<decimal?>("ValorDecimal")
                        .HasColumnName("VALOR_DECIMAL");

                    b.Property<int?>("ValorEntero")
                        .HasColumnName("VALOR_ENTERO");

                    b.Property<DateTime?>("ValorFecha")
                        .HasColumnName("VALOR_FECHA")
                        .HasColumnType("datetime");

                    b.HasKey("IdValor");

                    b.HasIndex("IdAtributo")
                        .HasName("IX_ID_ATRIBUTO");

                    b.HasIndex("IdTipo")
                        .HasName("IX_ID_TIPO");

                    b.HasIndex("IdUnidVenta")
                        .HasName("IX_ID_UNID_VENTA");

                    b.ToTable("VALOR_ATRIBUTO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ValoresMarcado", b =>
                {
                    b.Property<int>("IdValorMarcado")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_VALOR_MARCADO");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Precio")
                        .HasColumnName("PRECIO");

                    b.Property<int>("Valor")
                        .HasColumnName("VALOR");

                    b.HasKey("IdValorMarcado");

                    b.ToTable("VALORES_MARCADO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.VersionProducto", b =>
                {
                    b.Property<int>("IdVersion")
                        .HasColumnName("ID_VERSION");

                    b.Property<int>("IdProducto")
                        .HasColumnName("ID_PRODUCTO");

                    b.Property<bool>("EstadoRegistro")
                        .HasColumnName("ESTADO_REGISTRO");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnName("FECHA_ACTUALIZACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(45);

                    b.HasKey("IdVersion", "IdProducto");

                    b.HasIndex("IdProducto")
                        .HasName("IX_ID_PRODUCTO");

                    b.ToTable("VERSION_PRODUCTO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Articulos", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Productos", "IdProductoNavigation")
                        .WithMany("Articulos")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_dbo.ARTICULOS_dbo.PRODUCTOS_ID_PRODUCTO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosAtributosValores", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.AtributosArticulos", "IdAtributoNavigation")
                        .WithMany("ArticulosAtributosValores")
                        .HasForeignKey("IdAtributo")
                        .HasConstraintName("FK_dbo.ARTICULOS_ATRIBUTOS_VALORES_dbo.ATRIBUTOS_ARTICULOS_ID_ATRIBUTO");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.ValorAtributo", "IdValorNavigation")
                        .WithMany("ArticulosAtributosValores")
                        .HasForeignKey("IdValor")
                        .HasConstraintName("FK_dbo.ARTICULOS_ATRIBUTOS_VALORES_dbo.VALOR_ATRIBUTO_ID_VALOR");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Articulos", "Id")
                        .WithMany("ArticulosAtributosValores")
                        .HasForeignKey("IdArticulo", "IdProducto")
                        .HasConstraintName("FK_dbo.ARTICULOS_ATRIBUTOS_VALORES_dbo.ARTICULOS_ID_ARTICULO_ID_PRODUCTO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosCarritoCompra", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.CarritoCompra", "IdCarritoNavigation")
                        .WithMany("ArticulosCarritoCompra")
                        .HasForeignKey("IdCarrito")
                        .HasConstraintName("FK_dbo.ARTICULOS_CARRITO_COMPRA_dbo.CARRITO_COMPRA_ID_CARRITO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosCarritoCompraPrepedido", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.CarritoCompraPrepedido", "IdCarritoNavigation")
                        .WithMany("ArticulosCarritoCompraPrepedido")
                        .HasForeignKey("IdCarrito")
                        .HasConstraintName("FK_dbo.ARTICULOS_CARRITO_COMPRA_PREPEDIDO_dbo.CARRITO_COMPRA_PREPEDIDO_ID_CARRITO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosDetallesListaPedido", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.DetallesListaPedido", "IdDetallePedidoNavigation")
                        .WithMany("ArticulosDetallesListaPedido")
                        .HasForeignKey("IdDetallePedido")
                        .HasConstraintName("FK_dbo.ARTICULOS_DETALLES_LISTA_PEDIDO_dbo.DETALLES_LISTA_PEDIDO_ID_DETALLE_PEDIDO")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Articulos", "Id")
                        .WithMany("ArticulosDetallesListaPedido")
                        .HasForeignKey("IdArticulo", "IdProducto")
                        .HasConstraintName("FK_dbo.ARTICULOS_DETALLES_LISTA_PEDIDO_dbo.ARTICULOS_ID_ARTICULO_ID_PRODUCTO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosEntradosEstantes", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.DetallesEntradaInventario", "IdDetalleEntradaInventarioNavigation")
                        .WithMany("ArticulosEntradosEstantes")
                        .HasForeignKey("IdDetalleEntradaInventario")
                        .HasConstraintName("FK_dbo.ARTICULOS_ENTRADOS_ESTANTES_dbo.DETALLES_ENTRADA_INVENTARIO_ID_DETALLE_ENTRADA_INVENTARIO")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Estantes", "IdEstanteNavigation")
                        .WithMany("ArticulosEntradosEstantes")
                        .HasForeignKey("IdEstante")
                        .HasConstraintName("FK_dbo.ARTICULOS_ENTRADOS_ESTANTES_dbo.ESTANTES_ID_ESTANTE")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosPedidosFacturasVenta", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.ArticulosPorPedido", "Id")
                        .WithMany("ArticulosPedidosFacturasVenta")
                        .HasForeignKey("IdArticulo", "IdPedido", "IdProducto")
                        .HasConstraintName("FK_dbo.ARTICULOS_PEDIDOS_FACTURAS_VENTA_dbo.ARTICULOS_POR_PEDIDO_ID_ARTICULO_ID_PRODUCTO_ID_PEDIDO");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.ArticulosPorFacturaVenta", "IdNavigation")
                        .WithMany("ArticulosPedidosFacturasVenta")
                        .HasForeignKey("IdArticuloCambio", "IdFactura", "IdProductoCambio")
                        .HasConstraintName("FK_dbo.ARTICULOS_PEDIDOS_FACTURAS_VENTA_dbo.ARTICULOS_POR_FACTURA_VENTA_ID_ARTICULO_CAMBIO_ID_PRODUCTO_CAMBIO_ID_FACTURA");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosPorFacturaCompra", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.FacturasCompras", "IdFacturaCompraNavigation")
                        .WithMany("ArticulosPorFacturaCompra")
                        .HasForeignKey("IdFacturaCompra")
                        .HasConstraintName("FK_dbo.ARTICULOS_POR_FACTURA_COMPRA_dbo.FACTURAS_COMPRAS_ID_FACTURA_COMPRA")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Articulos", "Id")
                        .WithMany("ArticulosPorFacturaCompra")
                        .HasForeignKey("IdArticulo", "IdProducto")
                        .HasConstraintName("FK_dbo.ARTICULOS_POR_FACTURA_COMPRA_dbo.ARTICULOS_ID_ARTICULO_ID_PRODUCTO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosPorFacturaVenta", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.FacturasVentas", "IdFacturaVentaNavigation")
                        .WithMany("ArticulosPorFacturaVenta")
                        .HasForeignKey("IdFacturaVenta")
                        .HasConstraintName("FK_dbo.ARTICULOS_POR_FACTURA_VENTA_dbo.FACTURAS_VENTAS_ID_FACTURA_VENTA");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Articulos", "Id")
                        .WithMany("ArticulosPorFacturaVenta")
                        .HasForeignKey("IdArticulo", "IdProducto")
                        .HasConstraintName("FK_dbo.ARTICULOS_POR_FACTURA_VENTA_dbo.ARTICULOS_ID_ARTICULO_ID_PRODUCTO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosPorInstitucion", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Individuos", "IdIndividuoNavigation")
                        .WithMany("ArticulosPorInstitucion")
                        .HasForeignKey("IdIndividuo")
                        .HasConstraintName("FK_dbo.ARTICULOS_POR_INSTITUCION_dbo.INDIVIDUOS_ID_INDIVIDUO")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Pedidos", "IdPedidoNavigation")
                        .WithMany("ArticulosPorInstitucion")
                        .HasForeignKey("IdPedido")
                        .HasConstraintName("FK_dbo.ARTICULOS_POR_INSTITUCION_dbo.PEDIDOS_ID_PEDIDO");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Articulos", "Id")
                        .WithMany("ArticulosPorInstitucion")
                        .HasForeignKey("IdArticulo", "IdProducto")
                        .HasConstraintName("FK_dbo.ARTICULOS_POR_INSTITUCION_dbo.ARTICULOS_ID_ARTICULO_ID_PRODUCTO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosPorInstitucionPrePedido", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.PrePedidos", "IdPrePedidoNavigation")
                        .WithMany("ArticulosPorInstitucionPrePedido")
                        .HasForeignKey("IdPrePedido")
                        .HasConstraintName("FK_dbo.ARTICULOS_POR_INSTITUCION_PRE_PEDIDO_dbo.PRE_PEDIDOS_ID_PRE_PEDIDO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosPorLista", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.ListasEscolares", "IdListaNavigation")
                        .WithMany("ArticulosPorLista")
                        .HasForeignKey("IdLista")
                        .HasConstraintName("FK_dbo.ARTICULOS_POR_LISTA_dbo.LISTAS_ESCOLARES_ID_LISTA")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Articulos", "Id")
                        .WithMany("ArticulosPorLista")
                        .HasForeignKey("IdArticulo", "IdProducto")
                        .HasConstraintName("FK_dbo.ARTICULOS_POR_LISTA_dbo.ARTICULOS_ID_ARTICULO_ID_PRODUCTO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosPorOrden", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.OrdenCompra", "IdOrdenNavigation")
                        .WithMany("ArticulosPorOrden")
                        .HasForeignKey("IdOrden")
                        .HasConstraintName("FK_dbo.ARTICULOS_POR_ORDEN_dbo.ORDEN_COMPRA_ID_ORDEN")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Articulos", "Id")
                        .WithMany("ArticulosPorOrden")
                        .HasForeignKey("IdArticulo", "IdProducto")
                        .HasConstraintName("FK_dbo.ARTICULOS_POR_ORDEN_dbo.ARTICULOS_ID_ARTICULO_ID_PRODUCTO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosPorPedido", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Pedidos", "IdPedidoNavigation")
                        .WithMany("ArticulosPorPedido")
                        .HasForeignKey("IdPedido")
                        .HasConstraintName("FK_dbo.ARTICULOS_POR_PEDIDO_dbo.PEDIDOS_ID_PEDIDO")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Articulos", "Id")
                        .WithMany("ArticulosPorPedido")
                        .HasForeignKey("IdArticulo", "IdProducto")
                        .HasConstraintName("FK_dbo.ARTICULOS_POR_PEDIDO_dbo.ARTICULOS_ID_ARTICULO_ID_PRODUCTO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosPrePedido", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.PrePedidos", "IdPrePedidoNavigation")
                        .WithMany("ArticulosPrePedido")
                        .HasForeignKey("IdPrePedido")
                        .HasConstraintName("FK_dbo.ARTICULOS_PRE_PEDIDO_dbo.PRE_PEDIDOS_ID_PRE_PEDIDO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ArticulosUnidadVenta", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Articulos", "Id")
                        .WithMany("ArticulosUnidadVentaId")
                        .HasForeignKey("IdArticulo", "IdProducto")
                        .HasConstraintName("FK_dbo.ARTICULOS_UNIDAD_VENTA_dbo.ARTICULOS_ID_ARTICULO_ID_PRODUCTO");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Articulos", "IdNavigation")
                        .WithMany("ArticulosUnidadVentaIdNavigation")
                        .HasForeignKey("IdArticuloBase", "IdProductoBase")
                        .HasConstraintName("FK_dbo.ARTICULOS_UNIDAD_VENTA_dbo.ARTICULOS_ID_ARTICULO_BASE_ID_PRODUCTO_BASE")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.AspNetUserClaims", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.AspNetUserClaims_dbo.AspNetUsers_User_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.AspNetUserLogins", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.AspNetUserRoles", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.AspNetRoles", "Role")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.AspNetUsers", "User")
                        .WithMany("AspNetUserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.AtribsInstituciones", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Instituciones", "IdIndividuoNavigation")
                        .WithOne("AtribsInstituciones")
                        .HasForeignKey("AdminCore.BusinessLogic.Products.Models.AtribsInstituciones", "IdIndividuo")
                        .HasConstraintName("FK_dbo.ATRIBS_INSTITUCIONES_dbo.INSTITUCIONES_ID_INDIVIDUO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.AtributosArticulos", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.TipoAtributos", "IdTipoNavigation")
                        .WithMany("AtributosArticulos")
                        .HasForeignKey("IdTipo")
                        .HasConstraintName("FK_dbo.ATRIBUTOS_ARTICULOS_dbo.TIPO_ATRIBUTOS_ID_TIPO");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.UnidadesVenta", "IdUnidVentaNavigation")
                        .WithMany("AtributosArticulos")
                        .HasForeignKey("IdUnidVenta")
                        .HasConstraintName("FK_dbo.ATRIBUTOS_ARTICULOS_dbo.UNIDADES_VENTA_ID_UNID_VENTA");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.BeneficiariosValidos", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.BeneficiosAliados", "IdBeneficioNavigation")
                        .WithMany("BeneficiariosValidos")
                        .HasForeignKey("IdBeneficio")
                        .HasConstraintName("FK_dbo.BENEFICIARIOS_VALIDOS_dbo.BENEFICIOS_ALIADOS_ID_BENEFICIO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.BeneficiosAliados", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Descuentos", "IdCodigoDescuentoNavigation")
                        .WithMany("BeneficiosAliados")
                        .HasForeignKey("IdCodigoDescuento")
                        .HasConstraintName("FK_dbo.BENEFICIOS_ALIADOS_dbo.DESCUENTOS_ID_CODIGO_DESCUENTO");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Instituciones", "IdIndividuoNavigation")
                        .WithMany("BeneficiosAliados")
                        .HasForeignKey("IdIndividuo")
                        .HasConstraintName("FK_dbo.BENEFICIOS_ALIADOS_dbo.INSTITUCIONES_ID_INDIVIDUO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Bodegas", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Ubicaciones", "IdUbicacionNavigation")
                        .WithMany("Bodegas")
                        .HasForeignKey("IdUbicacion")
                        .HasConstraintName("FK_dbo.BODEGAS_dbo.UBICACIONES_ID_UBICACION")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.CategoriaCategorias", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Categorias", "IdCategoriaHijoNavigation")
                        .WithMany("CategoriaCategoriasIdCategoriaHijoNavigation")
                        .HasForeignKey("IdCategoriaHijo")
                        .HasConstraintName("FK_dbo.CATEGORIA_CATEGORIAS_dbo.CATEGORIAS_ID_CATEGORIA_HIJO");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Categorias", "IdCategoriaPadreNavigation")
                        .WithMany("CategoriaCategoriasIdCategoriaPadreNavigation")
                        .HasForeignKey("IdCategoriaPadre")
                        .HasConstraintName("FK_dbo.CATEGORIA_CATEGORIAS_dbo.CATEGORIAS_ID_CATEGORIA_PADRE");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.CategoriaProd", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Categorias", "CategoriasIdCategoriaNavigation")
                        .WithMany("CategoriaProd")
                        .HasForeignKey("CategoriasIdCategoria")
                        .HasConstraintName("FK_dbo.CATEGORIA_PROD_dbo.CATEGORIAS_CATEGORIAS_ID_CATEGORIA")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Productos", "ProductosIdProductoNavigation")
                        .WithMany("CategoriaProd")
                        .HasForeignKey("ProductosIdProducto")
                        .HasConstraintName("FK_dbo.CATEGORIA_PROD_dbo.PRODUCTOS_PRODUCTOS_ID_PRODUCTO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.CategoriasCategoriasContable", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Categorias", "IdCategoriaNavigation")
                        .WithMany("CategoriasCategoriasContable")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK_dbo.CATEGORIAS_CATEGORIAS_CONTABLE_dbo.CATEGORIAS_ID_CATEGORIA")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.CategoriasContabilidad", "IdCategoriaContableNavigation")
                        .WithMany("CategoriasCategoriasContable")
                        .HasForeignKey("IdCategoriaContable")
                        .HasConstraintName("FK_dbo.CATEGORIAS_CATEGORIAS_CONTABLE_dbo.CATEGORIAS_CONTABILIDAD_ID_CATEGORIA_CONTABLE")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Ciudades", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Regiones", "IdRegionNavigation")
                        .WithMany("Ciudades")
                        .HasForeignKey("IdRegion")
                        .HasConstraintName("FK_dbo.CIUDADES_dbo.REGIONES_ID_REGION")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.CostoEnvio", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Ciudades", "IdCiudadNavigation")
                        .WithMany("CostoEnvio")
                        .HasForeignKey("IdCiudad")
                        .HasConstraintName("FK_dbo.COSTO_ENVIO_dbo.CIUDADES_ID_CIUDAD")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Cursos", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Instituciones", "IdIndividuoNavigation")
                        .WithMany("Cursos")
                        .HasForeignKey("IdIndividuo")
                        .HasConstraintName("FK_dbo.CURSOS_dbo.INSTITUCIONES_ID_INDIVIDUO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.DescripcionProducto", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Productos", "IdProductoNavigation")
                        .WithMany("DescripcionProducto")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_dbo.DESCRIPCION_PRODUCTO_dbo.PRODUCTOS_ID_PRODUCTO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Descuentos", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Campanas", "IdCampanaNavigation")
                        .WithMany("Descuentos")
                        .HasForeignKey("IdCampana")
                        .HasConstraintName("FK_dbo.DESCUENTOS_dbo.CAMPANAS_ID_CAMPANA");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.DescuentosUsados", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Descuentos", "IdDescuentoNavigation")
                        .WithMany("DescuentosUsados")
                        .HasForeignKey("IdDescuento")
                        .HasConstraintName("FK_dbo.DESCUENTOS_USADOS_dbo.DESCUENTOS_ID_DESCUENTO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.DetallesAjusteInventario", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.AjustesInventario", "IdAjusteInventarioNavigation")
                        .WithMany("DetallesAjusteInventario")
                        .HasForeignKey("IdAjusteInventario")
                        .HasConstraintName("FK_dbo.DETALLES_AJUSTE_INVENTARIO_dbo.AJUSTES_INVENTARIO_ID_AJUSTE_INVENTARIO")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Articulos", "Id")
                        .WithMany("DetallesAjusteInventario")
                        .HasForeignKey("IdArticulo", "IdProducto")
                        .HasConstraintName("FK_dbo.DETALLES_AJUSTE_INVENTARIO_dbo.ARTICULOS_ID_ARTICULO_ID_PRODUCTO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.DetallesEntradaInventario", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.EntradasInventario", "IdEntradaInventarioNavigation")
                        .WithMany("DetallesEntradaInventario")
                        .HasForeignKey("IdEntradaInventario")
                        .HasConstraintName("FK_dbo.DETALLES_ENTRADA_INVENTARIO_dbo.ENTRADAS_INVENTARIO_ID_ENTRADA_INVENTARIO")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.FacturasCompras", "IdFacturaCompraNavigation")
                        .WithMany("DetallesEntradaInventario")
                        .HasForeignKey("IdFacturaCompra")
                        .HasConstraintName("FK_dbo.DETALLES_ENTRADA_INVENTARIO_dbo.FACTURAS_COMPRAS_ID_FACTURA_COMPRA")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Articulos", "Id")
                        .WithMany("DetallesEntradaInventario")
                        .HasForeignKey("IdArticulo", "IdProducto")
                        .HasConstraintName("FK_dbo.DETALLES_ENTRADA_INVENTARIO_dbo.ARTICULOS_ID_ARTICULO_ID_PRODUCTO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.DetallesListaPedido", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.ListasEscolares", "IdListaNavigation")
                        .WithMany("DetallesListaPedido")
                        .HasForeignKey("IdLista")
                        .HasConstraintName("FK_dbo.DETALLES_LISTA_PEDIDO_dbo.LISTAS_ESCOLARES_ID_LISTA");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Pedidos", "IdPedidoNavigation")
                        .WithMany("DetallesListaPedido")
                        .HasForeignKey("IdPedido")
                        .HasConstraintName("FK_dbo.DETALLES_LISTA_PEDIDO_dbo.PEDIDOS_ID_PEDIDO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.DetallesSalidaInventario", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.FacturasVentas", "IdFacturaVentaNavigation")
                        .WithMany("DetallesSalidaInventario")
                        .HasForeignKey("IdFacturaVenta")
                        .HasConstraintName("FK_dbo.DETALLES_SALIDA_INVENTARIO_dbo.FACTURAS_VENTAS_ID_FACTURA_VENTA")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.SalidasInventario", "IdSalidaInventarioNavigation")
                        .WithMany("DetallesSalidaInventario")
                        .HasForeignKey("IdSalidaInventario")
                        .HasConstraintName("FK_dbo.DETALLES_SALIDA_INVENTARIO_dbo.SALIDAS_INVENTARIO_ID_SALIDA_INVENTARIO")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Articulos", "Id")
                        .WithMany("DetallesSalidaInventario")
                        .HasForeignKey("IdArticulo", "IdProducto")
                        .HasConstraintName("FK_dbo.DETALLES_SALIDA_INVENTARIO_dbo.ARTICULOS_ID_ARTICULO_ID_PRODUCTO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.EstadisticasIcfes", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Instituciones", "IdIndividuoNavigation")
                        .WithMany("EstadisticasIcfes")
                        .HasForeignKey("IdIndividuo")
                        .HasConstraintName("FK_dbo.ESTADISTICAS_ICFES_dbo.INSTITUCIONES_ID_INDIVIDUO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Estantes", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Bodegas", "IdBodegaNavigation")
                        .WithMany("Estantes")
                        .HasForeignKey("IdBodega")
                        .HasConstraintName("FK_dbo.ESTANTES_dbo.BODEGAS_ID_BODEGA")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.FacturasCompras", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Proveedores", "IdIndividuoNavigation")
                        .WithMany("FacturasCompras")
                        .HasForeignKey("IdIndividuo")
                        .HasConstraintName("FK_dbo.FACTURAS_COMPRAS_dbo.PROVEEDORES_ID_INDIVIDUO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.FacturasVentas", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Personas", "IdClienteNavigation")
                        .WithMany("FacturasVentas")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK_dbo.FACTURAS_VENTAS_dbo.PERSONAS_ID_PEDIDO");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Pedidos", "IdPedidoNavigation")
                        .WithMany("FacturasVentas")
                        .HasForeignKey("IdPedido")
                        .HasConstraintName("FK_dbo.FACTURAS_VENTAS_dbo.PEDIDOS_IdPedido");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.HistoricoListas", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.ListasEscolares", "IdListaNavigation")
                        .WithMany("HistoricoListas")
                        .HasForeignKey("IdLista")
                        .HasConstraintName("FK_dbo.HISTORICO_LISTAS_dbo.LISTAS_ESCOLARES_ID_LISTA")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ImagenesPost", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Posts", "IdPostNavigation")
                        .WithMany("ImagenesPost")
                        .HasForeignKey("IdPost")
                        .HasConstraintName("FK_dbo.IMAGENES_POST_dbo.POSTS_ID_POST");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Instituciones", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Descuentos", "IdDescuentoNavigation")
                        .WithMany("Instituciones")
                        .HasForeignKey("IdDescuento")
                        .HasConstraintName("FK_dbo.INSTITUCIONES_dbo.DESCUENTOS_ID_DESCUENTO");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Individuos", "IdIndividuoNavigation")
                        .WithOne("Instituciones")
                        .HasForeignKey("AdminCore.BusinessLogic.Products.Models.Instituciones", "IdIndividuo")
                        .HasConstraintName("FK_dbo.INSTITUCIONES_dbo.INDIVIDUOS_ID_INDIVIDUO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.KeywordsArticulos", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.PalabrasClave", "PalabrasClaveIdPalabraNavigation")
                        .WithMany("KeywordsArticulos")
                        .HasForeignKey("PalabrasClaveIdPalabra")
                        .HasConstraintName("FK_dbo.KEYWORDS_ARTICULOS_dbo.PALABRAS_CLAVE_PALABRAS_CLAVE_ID_PALABRA")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Articulos", "Articulos")
                        .WithMany("KeywordsArticulos")
                        .HasForeignKey("ArticulosIdArticulo", "ArticulosIdProducto")
                        .HasConstraintName("FK_dbo.KEYWORDS_ARTICULOS_dbo.ARTICULOS_ARTICULOS_ID_ARTICULO_ARTICULOS_ID_PRODUCTO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.KeywordsCategorias", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Categorias", "CategoriasIdCategoriaNavigation")
                        .WithMany("KeywordsCategorias")
                        .HasForeignKey("CategoriasIdCategoria")
                        .HasConstraintName("FK_dbo.KEYWORDS_CATEGORIAS_dbo.CATEGORIAS_CATEGORIAS_ID_CATEGORIA")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.PalabrasClave", "PalabrasClaveIdPalabraNavigation")
                        .WithMany("KeywordsCategorias")
                        .HasForeignKey("PalabrasClaveIdPalabra")
                        .HasConstraintName("FK_dbo.KEYWORDS_CATEGORIAS_dbo.PALABRAS_CLAVE_PALABRAS_CLAVE_ID_PALABRA")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.KeywordsProductos", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.PalabrasClave", "PalabrasClaveIdPalabraNavigation")
                        .WithMany("KeywordsProductos")
                        .HasForeignKey("PalabrasClaveIdPalabra")
                        .HasConstraintName("FK_dbo.KEYWORDS_PRODUCTOS_dbo.PALABRAS_CLAVE_PALABRAS_CLAVE_ID_PALABRA")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Productos", "ProductosIdProductoNavigation")
                        .WithMany("KeywordsProductos")
                        .HasForeignKey("ProductosIdProducto")
                        .HasConstraintName("FK_dbo.KEYWORDS_PRODUCTOS_dbo.PRODUCTOS_PRODUCTOS_ID_PRODUCTO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ListasEscolares", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Cursos", "IdCursoNavigation")
                        .WithMany("ListasEscolares")
                        .HasForeignKey("IdCurso")
                        .HasConstraintName("FK_dbo.LISTAS_ESCOLARES_dbo.CURSOS_ID_CURSO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.MarcasProveedor", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Marcas", "MarcasIdMarcaNavigation")
                        .WithMany("MarcasProveedor")
                        .HasForeignKey("MarcasIdMarca")
                        .HasConstraintName("FK_dbo.MARCAS_PROVEEDOR_dbo.MARCAS_MARCAS_ID_MARCA")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Proveedores", "ProveedoresIdIndividuoNavigation")
                        .WithMany("MarcasProveedor")
                        .HasForeignKey("ProveedoresIdIndividuo")
                        .HasConstraintName("FK_dbo.MARCAS_PROVEEDOR_dbo.PROVEEDORES_PROVEEDORES_ID_INDIVIDUO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.OrdenCompra", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Proveedores", "ProveedorIdIndividuoNavigation")
                        .WithMany("OrdenCompra")
                        .HasForeignKey("ProveedorIdIndividuo")
                        .HasConstraintName("FK_dbo.ORDEN_COMPRA_dbo.PROVEEDORES_ID_INDIVIDUO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Parrafos", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Posts", "IdPostNavigation")
                        .WithMany("Parrafos")
                        .HasForeignKey("IdPost")
                        .HasConstraintName("FK_dbo.PARRAFOS_dbo.POSTS_ID_POST")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.PedidoInfoPayu", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Pedidos", "IdPedidoNavigation")
                        .WithMany("PedidoInfoPayu")
                        .HasForeignKey("IdPedido")
                        .HasConstraintName("FK_dbo.PEDIDO_INFO_PAYU_dbo.PEDIDOS_ID_PEDIDO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Pedidos", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Descuentos", "IdDescuentoNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdDescuento")
                        .HasConstraintName("FK_dbo.PEDIDOS_dbo.DESCUENTOS_ID_DESCUENTO");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Individuos", "IdIndividuoNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdIndividuo")
                        .HasConstraintName("FK_dbo.PEDIDOS_dbo.INDIVIDUOS_ID_INDIVIDUO")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.OrdenCompra", "IdOrdenCompraNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdOrdenCompra")
                        .HasConstraintName("FK_dbo.PEDIDOS_dbo.ORDEN_COMPRA_ID_ORDEN_COMPRA");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Ubicaciones", "IdUbicacionNavigation")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdUbicacion")
                        .HasConstraintName("FK_dbo.PEDIDOS_dbo.UBICACIONES_ID_UBICACION")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Personas", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Individuos", "IdIndividuoNavigation")
                        .WithOne("Personas")
                        .HasForeignKey("AdminCore.BusinessLogic.Products.Models.Personas", "IdIndividuo")
                        .HasConstraintName("FK_dbo.PERSONAS_dbo.INDIVIDUOS_ID_INDIVIDUO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Precios", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Articulos", "Id")
                        .WithMany("Precios")
                        .HasForeignKey("IdArticulo", "IdProducto")
                        .HasConstraintName("FK_dbo.PRECIOS_dbo.ARTICULOS_ID_ARTICULO_ID_PRODUCTO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Productos", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.CategoriasContabilidad", "IdCategoriaContabilidadNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoriaContabilidad")
                        .HasConstraintName("FK_dbo.PRODUCTOS_dbo.CATEGORIAS_CONTABILIDAD_ID_CATEGORIA_CONTABILIDAD");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Marcas", "IdMarcaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdMarca")
                        .HasConstraintName("FK_dbo.PRODUCTOS_dbo.MARCAS_ID_MARCA")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ProductosRespaldo", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Articulos", "Id")
                        .WithMany("ProductosRespaldoId")
                        .HasForeignKey("IdArticulo", "IdProducto")
                        .HasConstraintName("FK_dbo.PRODUCTOS_RESPALDO_dbo.ARTICULOS_ID_ARTICULO_ID_PRODUCTO");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Articulos", "IdNavigation")
                        .WithMany("ProductosRespaldoIdNavigation")
                        .HasForeignKey("IdArticuloRes", "IdProductoRes")
                        .HasConstraintName("FK_dbo.PRODUCTOS_RESPALDO_dbo.ARTICULOS_ID_ARTICULO_RES_ID_PRODUCTO_RES");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Proveedores", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.ActividadesEconomicas", "IdAcvtividadEconomicaNavigation")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdAcvtividadEconomica")
                        .HasConstraintName("FK_dbo.PROVEEDORES_dbo.ACTIVIDADES_ECONOMICAS_ID_ACVTIVIDAD_ECONOMICA")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Individuos", "IdIndividuoNavigation")
                        .WithOne("Proveedores")
                        .HasForeignKey("AdminCore.BusinessLogic.Products.Models.Proveedores", "IdIndividuo")
                        .HasConstraintName("FK_dbo.PROVEEDORES_dbo.INDIVIDUOS_ID_INDIVIDUO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Quotes", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Parrafos", "IdParrafoNavigation")
                        .WithMany("Quotes")
                        .HasForeignKey("IdParrafo")
                        .HasConstraintName("FK_dbo.QUOTES_dbo.PARRAFOS_ID_PARRAFO");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Regiones", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Paises", "CodigoPaisNavigation")
                        .WithMany("Regiones")
                        .HasForeignKey("CodigoPais")
                        .HasConstraintName("FK_dbo.REGIONES_dbo.PAISES_CODIGO_PAIS");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Sedes", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Individuos", "IdIndividuoNavigation")
                        .WithMany("Sedes")
                        .HasForeignKey("IdIndividuo")
                        .HasConstraintName("FK_dbo.SEDES_dbo.INDIVIDUOS_ID_INDIVIDUO");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Ubicaciones", "IdUbicacionNavigation")
                        .WithMany("Sedes")
                        .HasForeignKey("IdUbicacion")
                        .HasConstraintName("FK_dbo.SEDES_dbo.UBICACIONES_ID_UBICACION")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Subtitulos", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Posts", "IdPostNavigation")
                        .WithMany("Subtitulos")
                        .HasForeignKey("IdPost")
                        .HasConstraintName("FK_dbo.SUBTITULOS_dbo.POSTS_ID_POST");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.TrazabilidadCompras", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.DetallesEntradaInventario", "IdDetalleEntradaInventarioNavigation")
                        .WithMany("TrazabilidadCompras")
                        .HasForeignKey("IdDetalleEntradaInventario")
                        .HasConstraintName("FK_dbo.TRAZABILIDAD_COMPRAS_dbo.DETALLES_ENTRADA_INVENTARIO_ID_DETALLE_ENTRADA_INVENTARIO");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.ArticulosPorOrden", "IdDetalleOrdenCompraNavigation")
                        .WithMany("TrazabilidadCompras")
                        .HasForeignKey("IdDetalleOrdenCompra")
                        .HasConstraintName("FK_dbo.TRAZABILIDAD_COMPRAS_dbo.ARTICULOS_POR_ORDEN_ID_DETALLE_ORDEN_COMPRA");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Ubicaciones", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Ciudades", "IdCiudadNavigation")
                        .WithMany("Ubicaciones")
                        .HasForeignKey("IdCiudad")
                        .HasConstraintName("FK_dbo.UBICACIONES_dbo.CIUDADES_ID_CIUDAD");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.UbicPersonas", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Personas", "PersonasIdIndividuoNavigation")
                        .WithMany("UbicPersonas")
                        .HasForeignKey("PersonasIdIndividuo")
                        .HasConstraintName("FK_dbo.UBIC_PERSONAS_dbo.PERSONAS_PERSONAS_ID_INDIVIDUO")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Ubicaciones", "UbicacionesIdUbicacionNavigation")
                        .WithMany("UbicPersonas")
                        .HasForeignKey("UbicacionesIdUbicacion")
                        .HasConstraintName("FK_dbo.UBIC_PERSONAS_dbo.UBICACIONES_UBICACIONES_ID_UBICACION")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.Valoraciones", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Personas", "IdIndividuoNavigation")
                        .WithMany("Valoraciones")
                        .HasForeignKey("IdIndividuo")
                        .HasConstraintName("FK_dbo.VALORACIONES_dbo.PERSONAS_ID_INDIVIDUO");

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Productos", "IdProductoNavigation")
                        .WithMany("Valoraciones")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_dbo.VALORACIONES_dbo.PRODUCTOS_ID_PRODUCTO")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.ValorAtributo", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.AtributosArticulos", "IdAtributoNavigation")
                        .WithMany("ValorAtributo")
                        .HasForeignKey("IdAtributo")
                        .HasConstraintName("FK_dbo.VALOR_ATRIBUTO_dbo.ATRIBUTOS_ARTICULOS_ID_ATRIBUTO")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.TipoAtributos", "IdTipoNavigation")
                        .WithMany("ValorAtributo")
                        .HasForeignKey("IdTipo")
                        .HasConstraintName("FK_dbo.VALOR_ATRIBUTO_dbo.TIPO_ATRIBUTOS_ID_TIPO")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AdminCore.BusinessLogic.Products.Models.UnidadesVenta", "IdUnidVentaNavigation")
                        .WithMany("ValorAtributo")
                        .HasForeignKey("IdUnidVenta")
                        .HasConstraintName("FK_dbo.VALOR_ATRIBUTO_dbo.UNIDADES_VENTA_ID_UNID_VENTA");
                });

            modelBuilder.Entity("AdminCore.BusinessLogic.Products.Models.VersionProducto", b =>
                {
                    b.HasOne("AdminCore.BusinessLogic.Products.Models.Productos", "IdProductoNavigation")
                        .WithMany("VersionProducto")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_dbo.VERSION_PRODUCTO_dbo.PRODUCTOS_ID_PRODUCTO")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
